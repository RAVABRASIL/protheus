#INCLUDE "PROTHEUS.CH"
#INCLUDE "GPEA010.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡…o    ³ GPEA010    ³Autor  ³J. Ricardo         v.I ³ Data ³ 13/10/1992 º±±
±±º          ³            ³Autor  ³Marinaldo de Jesus v.II³ Data ³ 04/02/2004 º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºDescri‡…o ³ Cadastramento de Funcionarios                                  º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºSintaxe   ³ GPEA010()                                                      º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºUso       ³ Generico                                                       º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±º         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.                 º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºProgramador ³ Data     ³ BOPS ³  Motivo da Alteracao                       º±±
±±ÌÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¹±±
±±ºMarinaldo   ³ 04/02/04 ³Melhor³Reescrita do Codigo e Integracao com o RDZ  º±±
±±º            ³          ³      ³e RD0                                       º±±
±±ºEmerson     ³ 18/03/05 ³080065³Somente enviar e-mail para admitidos.       º±±
±±º Andreia    ³ 14/01/05 ³073985³ Gravar no historico de salarios os campos  º±±
±±º            ³          ³      ³ "R7_CARGO" e "R7_DESCCAR".	 	 	      º±±
±±ºRicardo D.  ³ 20/04/05 ³080121³Criado o ponto de entrada Gp010ValPE para   º±±
±±º            ³          ³      ³validar inclusao/alteracao de funcionarios  º±±
±±ºNatie       ³ 30/05/05 ³082474³Qdo efetuava pesquisa no browse por cod.da  º±±
±±º            ³          ³      ³funcao e selecionava um funcionario, ao es  º±±
±±º            ³          ³      ³colher a opcao Alteracao, mostrava outro    º±±
±±º            ³          ³      ³funcionario na enchoice                     º±±
±±ºRicardo D.  ³ 03/06/05 ³082735³Incluido alias SRC p/ser testado durante a  º±±
±±º            ³          ³      ³exclusao. Este alias nao deve ser incluido  º±±
±±º            ³          ³      ³no SX9 p/nao afetar o fechameento mensal.   º±±
±±³ Andreia    ³ 07/07/05 ³082899³ Criada validacao no campo RA_CATFUNC para  ³±±
±±³            ³          ³      ³nao permitir que a categoria seja alterada  ³±± 
±±³            ³          ³      ³para "A"(autonomo) quando o funcionario ja  ³±± 
±±³            ³          ³      ³estiver cadastrado.                         ³±± 
±±³Emerson G.R.³ 05/08/05 ³085027³Validacao no campo RA_DATAALT para nao      ³±± 
±±³            ³          ³      ³permitir data menor que a data de admissao  ³±± 
±±³ Andreia    ³ 23/08/05 ³085118³Tratamento do campo R3_ANTEAUM, para arma-  ³±±
±±³            ³          ³      ³zenar no historico salarial o valor base    ³±± 
±±³            ³          ³      ³para dissidio.( Funcao fGravaSr3)           ³±± 
±±³ Ricardo D. ³ 25/08/05 ³FN2734³Tratamento da consulta padrao do SRJ pois   ³±±
±±³            ³          ³/2005 ³estavam invertidas as funcoes de inclusao   ³±± 
±±³            ³          ³      ³e visualizacao.                             ³±± 
±±³Pedro Eloy  ³ 26/08/05 ³085874³Tratamento do gatilho do campo RA_CODFUNC   ³±±
±±³            ³          ³      ³ordem 6 buscar o campo RJ_CODCOB            ³±± 
±±³ Andreia    ³ 31/08/05 ³FC QNC³Nao permitir que o salario de dissidio se-  ³±±
±±³            ³          ³2922  ³ja alterado sem informar o motivo de alte-  ³±± 
±±³            ³          ³      ³racao e a data de alteracao salarial.       ³±± 
±±³Eduardo Ju  ³ 23/09/05 ³082978³Criacao do parametro MV_FUNCARG permitindo  ³±±
±±³            ³          ³      ³atualizar o salario do funcionario c/ base  ³±± 
±±³            ³          ³      ³na Funcao ou Cargo.                         ³±± 
±±³ Andreia    ³ 27/10/05 ³087448³Feito tratamento para somente gravar histo  ³±± 
±±³            ³          ³      ³rico salarial por motivo de alteração de    ³±± 
±±³            ³          ³      ³cargo ou alteração de salario base de dis-  ³±± 
±±³            ³          ³      ³sidio, quando existirem os campos R7_CARGO  ³±± 
±±³            ³          ³      ³ e R3_ANTEAUM, respectivamente.             ³±± 
±±³ Eduardo    ³ 11/11/05 ³------³Inclusao de botao p/selecao de segmentos    ³±± 
±±³ Souza - GE ³          ³      ³quando o modulo Academico estiver ativo.    ³±± 
±±³ Ricardo D. ³ 16/11/05 ³088765³Ajuste da gravacao da tabela SR7 p/ajustar  ³±± 
±±³            ³          ³      ³a utilizacao de integridade referencial.    ³±± 
±±³ Ricardo D. ³ 22/11/05 ³088765³Novo ajuste da gravacao da tabela SR7 para  ³±± 
±±³            ³          ³      ³a utilizacao de integridade referencial.    ³±± 
±±³ Parceiros  ³ 01/02/06 ³092511³Ajuste na MdtAltFicha-passar xfilial()      ³±± 
±±³ Marcos Alve³ 03/02/06 ³92704 ³Ponto de entrada (GPE10BTN) para inclusão   ³±± 
±±³            ³          ³      ³de botao                                    ³±± 
±±³ Silvia     ³ 07/02/06 ³090746³Acerto na validacao do campo RA_CIC-Chile   ³±± 
±±³ Pedro Eloy ³ 10/02/06 ³      ³Ajuste na sequencia na gravacao alt.salarial³±± 
±±³ Pedro Eloy ³ 01/03/06 ³      ³Ajuste no gatilho da descr.da funcao do CBO ³±± 
±±³ Eduardo Ju ³ 05/05/06 ³094214³<Melhoria> Tratamento do MV_FUNCARG.        ³±± 
±±³Tania       ³22/05/2006³097551³Criacao da Cons.Padrao Q3S para filtrar os  ³±±
±±³            ³          ³      ³cargos pelo C.Custo do Funcionario. Cria-   ³±±      
±±³            ³          ³      ³cao do Valid do RA_CARGO.                   ³±±      
±±³Pedro Eloy  ³02/06/2006³095839³tratamento ao confirmar do campo matricula  ³±±
±±³Emerson G.R.³14/06/2006³101290³Alteracao no AcertSX3, X3_F3 do RA_TABELA.  ³±±
±±³Andreia     ³06/06/06  ³100330³Incluir a funcao FHIST() na validacao dos   ³±± 
±±³            ³          ³      ³campos RA_NASC e RA_CBO.                    ³±± 
±±³ Natie      ³05/07/06  ³102002³Troca picture RA_TELEFON                    ³±± 
±±³ Ricardo D. ³13/07/06  ³103287³Ajuste em GPEA010RUNVALID() p/posicionar no ³±± 
±±³            ³          ³      ³campo RA_MAT antes de executar a validacao. ³±± 
±±³ Ricardo D. ³14/07/06  ³103287³Ajuste na validacao do campo RA_MAT p/passar³±± 
±±³            ³          ³      ³a variavel M->RA_MAT na chamada da funcao   ³±± 
±±³            ³          ³      ³existchav().                                ³±± 
±±³ Natie      ³03/08/06  ³101002³Ponto de entrada para validar exclusao      ³±± 
±±³            ³          ³      ³de funcionarios- Gp010Excl                  ³±± 
±±³ Ricardo D. ³25/08/06  ³105574³Ajuste na condicao das consultas padroes Q3S³±± 
±±³            ³          ³      ³e RB601 de forma a nao gerar error.log duran³±± 
±±³            ³          ³      ³te a consulta ao cadastro no rh-online.     ³±± 
±±³Andreia     ³06/09/06  ³105654³Ajuste em GPEA010RUNVALID() para focar o cam³±± 
±±³            ³          ³      ³po RA_MAT antes de gravar, na Inclusao.     ³±± 
±±³Marcos Alves³29/09/06  ³105654³Alterddo parametro 9 da funcao EntUpdateRd0 ³±± 
±±³            ³          ³      ³para nao atualizar os dado nas tabelas rela ³±± 
±±³            ³          ³      ³cionadas com RD0                            ³±± 
±±³Silvia      ³08/11/06  ³107448³Modif.de validacao de campo - Argentina     ³±± 
±±³Andreia     ³05/01/07  ³109585³Ajuste em GP010F3RB6() para tratar tambem   ³±± 
±±³            ³          ³      ³a chamada da funcao GPEA011(Gestao de fun-  ³±± 
±±³            ³          ³      ³cionarios).                                 ³±± 
±±³Marcos Alves³13/02/07  ³116718³Tratamento do campo RA_ANTEAUM, para modulos³±± 
±±³            ³          ³      ³nao configurado                             ³±±    
±±³Eduardo Ju  ³14/02/07  ³116988³Implementacao do Banco de Conhecimento.     ³±± 
±±³Ricardo D.  ³26/02/07  ³119536³Ajuste na validacao do campo RA_MAT p/permi-³±± 
±±³            ³          ³      ³tir que seja excluido o texto Val(M->RA_MAT)³±± 
±±³            ³          ³      ³pois desta forma sera permitida a inclusao  ³±± 
±±³            ³          ³      ³de matriculas em caracter.                  ³±± 
±±³Natie       ³09/03/07  ³114376³Ajuste na Gpea010FunVld do tratamento do pa-³±± 
±±³Natie   e   ³          ³      ³rametro mv_altsal e mv_funcarg              ³±± 
±±³Eduardo Ju  ³15/03/07  ³114376³Ajuste no AcertSX7                          ³±± 
±±³Natie       ³15/03/07  ³114376³Ajuste no alias do altsxb  (SQ3)            ³±± 
±±³Eduardo Ju  ³18/06/07  ³126268³Gravacao do RCP na admissao pelo ambiente   ³±± 
±±³            ³          ³      ³Recrutamento e Selecao - RSP.               ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±  
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
User Function GPEA010N( nOpcAuto , aRotinaNew )

Local aArea			:= GetArea()
Local aAreaSRA		:= SRA->( GetArea() )
Local aIndexSRA		:= {}

Local bBlock
Local cFiltraSRA
Local nPos
Local uRet

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Verifica se o Modulo e Ativo Fixo							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( TestaAtf() )
		Break
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Acerta o Dicionario de Dados do SRA para uso no Pyme		   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF FindFunction( "Pyme_Dic_Ajust" )
		Pyme_Dic_Ajust( "SRA" , .F. )
	EndIF

	//--Acerto do SXB - criacao de consulta do Cargo filtrado por Centro de Custo
	fAltSxb()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ajusta validacao do SX3 e SX7     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AltSX3()
	
	AcertSX7()	//Retirar na proxima versao...
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Define Array contendo as Rotinas a executar do programa      ³
	³ ----------- Elementos contidos por dimensao ------------     ³
	³ 1. Nome a aparecer no cabecalho                              ³
	³ 2. Nome da Rotina associada                                  ³
	³ 3. Usado pela rotina                                         ³
	³ 4. Tipo de Transa‡„o a ser efetuada                          ³
	³    1 - Pesquisa e Posiciona em um Banco de Dados             ³
	³    2 - Simplesmente Mostra os Campos                         ³
	³    3 - Inclui registros no Bancos de Dados                   ³
	³    4 - Altera o registro corrente                            ³
	³    5 - Remove o registro corrente do Banco de Dados          ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Private aRotina := {;
							{ STR0004	, "PesqBrw"		, 0 , 1 },; //"Pesquisar"
							{ STR0005	, "Gpea010Vis"	, 0 , 2 },; //"Visualizar"
							{ STR0006	, "Gpea010Inc"	, 0 , 3, 81 },; //"Incluir"
							{ STR0007	, "Gpea010Alt"	, 0 , 4, 82 },; //"Alterar"
							{ STR0008	, "Gpea010Del"	, 0 , 5, 3 },;  //"Excluir"
							{ STR0019	, "GpLegend"	, 0 , 6 },;	//"Legenda"  
							{ STR0060	,"MsDocument", 0, 4};		//"Conhecimento"
						}
	IF ( ValType( aRotinaNew) == "A" ) //Redefinindo aRotina
		aRotina := aClone( aRotinaNew )
	EndIF
	Private bFiltraBrw	:= { || NIL }
	Private cCadastro	:= OemToAnsi( STR0009 )		//"Cadastro de Funcion rios"
	
	IF ( nOpcAuto <> NIL )
		
		aRotSetOpc( "SRA" , NIL , nOpcAuto , .F. )
		nPos := aScan( aRotina , { |x| x[4] == nOpcAuto } )
		IF ( nPos == 0 )
			Break
		EndIF
		dbSelectArea( "SRA" )
		bBlock	:= &( "{ |a,b,c,d,e,f,g| " + aRotina[ nPos , 2 ] + "(a,b,c,d,e,f,g) }" )
		uRet	:= Eval( bBlock , "SRA" , SRA->( Recno() ) , nPos )

	Else
	
		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Inicializa o filtro utilizando a funcao FilBrowse                      ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		cFiltraRh := ChkRh("GPEA010","SRA","1")
		cFiltraRh += IF(!Empty(cFiltraRh),'.and. RA_CATFUNC # "A"','RA_CATFUNC # "A"')
		bFiltraBrw := { || FilBrowse("SRA",@aIndexSRA,@cFiltraRH) }
		Eval( bFiltraBrw )
		
		SRA->( dbGoTop() )
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se o GE estiver ativo utilizar a ACmBrowse                     |
		//³ devido aos controles de filtro para restrição de visibilidade  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If GetNewPar("MV_ACATIVO",.F.)
			ACmBrowse( 6 , 1 , 22 , 75 , "SRA" , NIL , NIL , NIL , NIL , NIL , fCriaCor() )
		Else
			mBrowse( 6 , 1 , 22 , 75 , "SRA" , NIL , NIL , NIL , NIL , NIL , fCriaCor() )		
		EndIf			

		/*
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Deleta o filtro utilizando a funcao FilBrowse                     	 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
		EndFilBrw( "SRA" , aIndexSra )
	
	EndIF
	
End Sequence
	
RestArea( aAreaSRA )
RestArea( aArea )

Return( uRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010_01	  ³Autor³ Marinaldo de Jesus  ³ Data ³26/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Rotina de Visualizacao do Cadastro de Funcionarios			³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Gpea010_01()												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Visualizacao do Cadastro de Funcionarios                    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³<void>														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010_01()
         
Local aRotinaNew	:= {;
							{ STR0004	, "PesqBrw"		, 0 , 1 },;	//"Pesquisar"
				 			{ STR0005	, "Gpea010Vis"	, 0 , 2 },;	//"Visualizar"
				 			{ STR0019	, "GpLegend"	, 0 , 5 };	//"Legenda"
			      		}
Return( GPEA010( NIL , aRotinaNew ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010Vis	  ³Autor³ Marinaldo de Jesus  ³ Data ³21/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Rotina de Visualizacao do Cadastro de Funcionadios			³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>         							³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA010                                                  	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Undefined													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010Vis( cAlias , nReg , nOpc , cSraMat , lDlgPadSiga , oDlg , aObjSize )

Local uRetAxVisual

nOpc := 2
DEFAULT lDlgPadSiga := .F.
uRetAxVisual := Gpea010Mnt( @cAlias , @nReg , @nOpc , @cSraMat , lDlgPadSiga , oDlg , aObjSize )

Return( uRetAxVisual )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³ gp010inc ³ Autor ³ Claudecino C Leao     ³ Data ³ 03/09/98 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Inclusao de Funcionario com atualizacao do arquivo de      ³
³          ³ tecnicos (AA1)     										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³ fGravaSr9(cCampo)                                          ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³ gpa010                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gp010Inc( cAlias , nReg , nOpc , cSraMat , lDlgPadSiga , oDlg , aObjSize )
DEFAULT lDlgPadSiga := .T.
Return( Gpea010Inc( @cAlias , @nReg , @nOpc , @cSraMat , lDlgPadSiga , oDlg , aObjSize ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010Inc	  ³Autor³ Marinaldo de Jesus  ³ Data ³14/08/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Rotina de Inclusao do Cadastro de Funcionarios				³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Undefined													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010Inc( cAlias , nReg , nOpc , cSraMat , lDlgPadSiga , oDlg , aObjSize )
nOpc := 3
DEFAULT lDlgPadSiga := .F.
Return( Gpea010Mnt( @cAlias , @nReg , @nOpc , @cSraMat , lDlgPadSiga , oDlg , aObjSize ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³ AxAlt010 ³ Autor ³ Jorge Queiroz         ³ Data ³          ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Programa generico para alteracao                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>                                   ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function AxAlt010( cAlias , nReg , nOpc , cSraMat , lDlgPadSiga , oDlg , aObjSize )
DEFAULT lDlgPadSiga := .T.
Return( Gpea010Mnt( cAlias , nReg , nOpc , @cSraMat , lDlgPadSiga , oDlg , aObjSize ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010Alt	  ³Autor³ Marinaldo de Jesus  ³ Data ³14/08/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Rotina de Alteracao do Cadastro de Funcionarios				³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Undefined													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010Alt( cAlias , nReg , nOpc , cSraMat , lDlgPadSiga , oDlg , aObjSize )
nOpc := 4
DEFAULT lDlgPadSiga := .F.
Return( Gpea010Mnt( @cAlias , @nReg , @nOpc , @cSraMat , lDlgPadSiga , oDlg , aObjSize ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³ gp010dele³ Autor ³ Wagner Xavier         ³ Data ³ 13/10/92 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Programa de exclusao de Funcionarios                       ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³ gp010dele(ExpC1,ExpN1,ExpN2)                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³ ExpC1 = Alias do arquivo                                   ³
³          ³ ExpN1 = Numero do registro                                 ³
³          ³ ExpN2 = Numero da opcao selecionada                        ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³ gp010Dele                                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gp010dele( cAlias , nReg , nOpc , cSraMat , lDlgPadSiga , oDlg , aObjSize )
DEFAULT lDlgPadSiga := .T.
Return( Gpea010Del( @cAlias , @nReg , @nOpc , @cSraMat , lDlgPadSiga , oDlg , aObjSize ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010Del	  ³Autor³ Marinaldo de Jesus  ³ Data ³14/08/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Rotina de Exclusao do Cadastro de Funcionarios				³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³Undefined													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010Del( cAlias , nReg , nOpc , cSraMat , lDlgPadSiga , oDlg , aObjSize )
nOpc := 5
DEFAULT lDlgPadSiga := .F.
Return( Gpea010Mnt( @cAlias , @nReg , @nOpc , @cSraMat , lDlgPadSiga , oDlg , aObjSize ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010Mnt	  ³Autor³ Marinaldo de Jesus  ³ Data ³04/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Cadastramento de Funcionarios (Manutencao)                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Gpea010Mnt( cAlias , nReg , nOpc )							³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL    														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010Mnt( cAlias , nReg , nOpc , cSraMat , lDlgPadSiga , oDlg , aObjSize )

Local aArea			:= GetArea(Alias())
Local aSvKeys		:= GetKeys()
Local aAdvSize		:= {}
Local aInfoAdvSize	:= {}
Local aObjCoords	:= {}
Local bDialogInit	:= { || NIL }
Local cCpoFil		:= ""
Local lActivate		:= ( oDlg == NIL )
Local nLoop			:= 0
Local nLoops		:= 0
Local nEpoch		:= Set( _SET_EPOCH , 1910 )	//Altera o Set Epoch para 1910
Local nOpcA			:= 0
Local cKeySeek		:= ""
Local bSkip			:= { || .F. }
Local aSegmentos	:= {}
Local aBtn10		:= {} 			// Array que receber o valor Receber o 
Local lTemItem      := SRA->( FieldPos( "RA_ITEM" ) # 0 )
Local lTemClVl	    := SRA->( FieldPos( "RA_CLVL" ) # 0 )
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Seta as Variaveis que serao utilizadas por outro Programa                ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
_SetOwnerPrvt(	"aSraFields"	, {} )
_SetOwnerPrvt(	"aSraAltera" 	, {} )
_SetOwnerPrvt(	"aSraNaoAlt" 	, {} )
_SetOwnerPrvt(	"aSraVirtual"	, {} )
_SetOwnerPrvt(	"aSraVisual" 	, {} )
_SetOwnerPrvt(	"aSraHeader" 	, {} )
_SetOwnerPrvt(	"aSraCols" 		, {} )
_SetOwnerPrvt(	"aSvSraCols"	, {} )
_SetOwnerPrvt(	"aGpea010Btn"	, {} )

_SetOwnerPrvt(	"bSraSet15"		, { || NIL } )
_SetOwnerPrvt(	"bSraSet24"		, { || NIL } )
_SetOwnerPrvt(	"bSraRelRd0" 	, { || NIL } )
_SetOwnerPrvt(	"bSraShwRel" 	, { || NIL } )	

_SetOwnerPrvt(	"cAltSal"		, Getmv("MV_ALTSAL") )

_SetOwnerPrvt(	"lSraRelRd0" 	, .F. )

_SetOwnerPrvt(	"nGetSX8Len"	, GetSX8Len() )
_SetOwnerPrvt(	"nRd0Recno"		, 0			  )

_SetOwnerPrvt(	"oEnchSra"		, NIL		  )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Coloca o Ponteiro do Mouse em Estado de Espera                           ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Reinicializa __aUniqueKey__ em UniqueKey() utilizada na funcao que  Fil³
³ tra a consulta via tecla <F3> para as Sequencias de Turno RA_SEQTURN   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
UniqueKey()

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Reinicializa as Informacoes em Cache carregadas pela PosSpa() utilizadas³
³na verificacao de Regra Valida											 ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IF FindFunction( "RstPosAlias" )
	RstPosAlias("SPA")
EndIF

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Inclui novos codigos de Afastamento de acordo com a versao 5.0 da SEFIP  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
IncAfast()

Begin Sequence

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Checa a Opcao Selecionada									   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	aRotSetOpc( cAlias , @nReg , nOpc )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Na Alteracao ou Exclusao Lock do Registro					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/ 
	IF ( ( nOpc == 4 ) .or. ( nOpc == 5 ) )
		IF ( nOpc == 4 )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Verifica se esta' alterando um registro da mesma filial               ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			cCpoFil := ( PrefixoCpo(cAlias)+"_FILIAL" )
			IF ( ( cAlias )->( FieldPos( cCpoFil ) > 0 )  )
	    		IF ( cAlias )->( FieldGet( FieldPos( cCpoFil ) ) <> xFilial( "SRA" ) )
	    		    Help(" ",1,"A000FI")
	    		    Break
	    		EndIF
			ENDIF
		EndIF	
		IF !( SoftLock( cAlias ) )
			Break
		EndIF
	EndIF

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta a chave para Pesquisa em GdMontaCols                   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If nOpc==4 
		cKeySeek:= ( &(cCpoFil) + SRA->RA_MAT ) 
		bSkip 	:= { ||  &("RA_FILIAL")+ &("RA_MAT") <> cKeySeek }
	Endif 	

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta os Dados para a Enchoice							   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/ 
	aSraCols	:= SRA->( GdBuildCols( @aSraHeader , @nLoops , @aSraVirtual , @aSraVisual,,,,,,, bSkip ) ) 
	aSvSraCols	:= aClone( aSraCols )
	
	/*/ 
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Cria as Variaveis de Memoria e Carrega os Dados Conforme o ar³
	³ quivo														   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	For nLoop := 1 To nLoops 
		aAdd( aSraFields , aSraHeader[ nLoop , 02 ] )
		IF ( lActivate )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Seta as Variaveis que serao utilizadas aa partir deste Ponto             ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			SetMemVar( aSraHeader[ nLoop , 02 ] , aSraCols[ 01 , nLoop ] , .T. )
		Else
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Seta as Variaveis que serao utilizadas por outro Programa                ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			_SetOwnerPrvt( aSraHeader[ nLoop , 02 ] , aSraCols[ 01 , nLoop ] )
		EndIF
	Next nLoop

	/*/ 
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Verifica se Pode Excluir o Funcionario                       ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( nOpc == 5 )
		IF !( Gpea010ChkDel( cAlias , nReg , nOpc , GetMemVar( "RA_MAT" ) ) )  .or. ;
		   !Gpea010Excl() 
			Break
		EndIF
	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Quando for Visualizacao, Inclusao ou Alteracao                ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ( nOpc == 2 ) .or. ( nOpc == 3 ) .or. ( nOpc == 4 ) )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Apenas na Inclusao ou Alteracao                               ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) )
		
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Define os Campos Editaveis na Enchoice                        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			nLoops := Len( aSraVisual )
			For nLoop := 1 To nLoops
				aAdd( aSraNaoAlt , aSraVisual[ nLoop ] )
			Next nLoop
	    	IF ( nOpc == 4 ) //Alteracao
	    		/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ As alteracoes de Matricula e Centro de Custo deverao ser  fei³
				³ tas pelo programa de transferencia         				   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	    		aAdd( aSraNaoAlt , "RA_MAT"		)
	    		aAdd( aSraNaoAlt , "RA_CC" 		)
	    		If lTemItem .and. lTemClVl
		    		aAdd( aSraNaoAlt , "RA_ITEM")
		    		aAdd( aSraNaoAlt , "RA_CLVL")
				EndIf
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ As alteracoes de Turno de Trabalho,Sequencia e Regra  deverao³
				³ ser feitas pelo programa de Trocas de Turno Quando Forem   va³
				³ lidos														   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF (; 
						IsMemVar( "RA_TNOTRAB" ) .and. ;
						IsMemVar( "RA_SEQTURN" ) .and. ;
						IsMemVar( "RA_REGRA"   )	   ;
					)
						IF (;
								PosSPA( GetMemVar( "RA_REGRA" ) , xFilial("SRA") , NIL , RetOrdem("SPA","PA_FILIAL+PA_CODIGO") , .F. ) .and. ;
								Gpea010SeqVld( .F. , .T. );
							)	
						aAdd( aSraNaoAlt , "RA_TNOTRAB" )
						aAdd( aSraNaoAlt , "RA_SEQTURN" )
						aAdd( aSraNaoAlt , "RA_REGRA"   )
					EndIF
				EndIF	
	    	EndIF
			nLoops := Len( aSraFields )
			For nLoop := 1 To nLoops
				IF ( aScan( aSraNaoAlt , { |cNaoA| cNaoA == aSraFields[ nLoop ] } ) == 0 )
					aAdd( aSraAltera , aSraFields[ nLoop ] )
				EndIF
			Next nLoop

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Se Existir o Arquivo de Relacionamento com o RD0 Disponibiliza³
			³Botao														   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF BldArrRdZRel()
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³ Define o Botao para Efetuar Relacionamentos com o RD0		   ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				bSraRelRd0 := { ||	CursorWait(),;
									lSraRelRd0 := SraRelRd0( @nRd0Recno , aSraHeader , .T. , NIL ),;
									SetKey( VK_F4 , bSraRelRd0 ),;
									CursorArrow();
						   	  }
				aAdd(;
	  					aGpea010Btn	,;
	  									{;
	  										"DESTINOS_OCEAN"					,;
	  			   							bSraRelRd0							,;
	  			       	   					OemToAnsi( STR0037 + "...<F4>"  )	,;	//"Relacionar" 
	  			       	   					OemToAnsi( STR0038				)	 ;	//"Relac."
	  			           				};
	  			     )
			EndIF
		
		EndIF

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Se Existir o Arquivo de Relacionamento com o RD0 Disponibiliza³
		³Botao														   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF BldArrRdZRel()
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Define o Botao para Visualizar Relacionamentos com o RD0	   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	  			bSraShwRel := { ||	CursorWait(),;
	  								SraShwRel( @nRd0Recno ),;
	  								SetKey( VK_F5 , bSraShwRel ),;
	  								CursorArrow();
	  					   	  }
	  			aAdd(;
	  					aGpea010Btn	,;
	  									{;
	  										"ANALITICO"							,;
	  			   							bSraShwRel							,;
	  			       	   					OemToAnsi( STR0039 + "...<F5>"  )	,;	//"Visualizar Relacionamento"
	  			       	   					OemToAnsi( STR0040				)	 ;	//"Vis.Relac."
	  			           				};
	  			     )
		EndIF	
	EndIF

	IF ( lActivate )

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Monta as Dimensoes dos Objetos         					   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		DEFAULT lDlgPadSiga	:= .F.
		aAdvSize		:= MsAdvSize( NIL , lDlgPadSiga )
		aInfoAdvSize	:= { aAdvSize[1] , aAdvSize[2] , aAdvSize[3] , aAdvSize[4] , 0 , 0 } 
		aAdd( aObjCoords , { 015 , 000 , .T. , .T. } )
		aObjSize		:= MsObjSize( aInfoAdvSize , aObjCoords )

	EndIF
	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para <CTRL-O> ( Button OK )                    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSraSet15 := { || IF(; 
								( ( nOpc == 3 ) .or. ( nOpc == 4 ) );				//Inclusao ou Alteracao
								.and.;
								If(( nOpc == 3 ),Gpea010RunValid(),.T.);									// Executa o valide do campo RA_MAT
								.and.;
								Obrigatorio( oEnchSra:aGets , oEnchSra:aTela );		//Verifica os Campos Obrigatoris na Enchoice
								.and.;	
								Gpea010SeqVld();									//Verifica a Sequencia do Turno
								.and.;
								Gpea010ValPE();										//Verifica a execucao do ponto de entrada Gp010ValPE
								.and.;
								IF( ( nOpc == 3 ) , PcoVldLan('000084','01','GPEA010') , IIF( nOpc == 4,PcoVldLan('000084','03','GPEA010'),.T.) ) .and. ;
								IF( ( nOpc == 4 ) , Gp010AltSal() , .T. ),;			//Verifica a Alteracao Salarial
								(;
									nOpcA := 1 ,;
									RestKeys( aSvKeys , .T. ),;
									oDlg:End();
							 	),;
							 	IF(; 
							 		( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) ,;			//Inclusao ou Visualizacao
							 			(;
							 				nOpcA := 0 ,;
							 				.F.;
							 			 ),;
									(;
										nOpcA := IF( nOpc == 2 , 0 , 1 ) ,;			//Visualizacao ou Exclusao
										RestKeys( aSvKeys , .T. ),;
										oDlg:End();
							 		);
							 	  );
						   );
				 }

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Define o Bloco para <CTRL-X> ( Button Cancel )                ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bSraSet24	:= { || oDlg:End() } 
    
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Verifica se o Gestao Educacional esta ativo, para neste caso, ³
	³apresentar botao de selecao de segmentos                      ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	If GetNewPar("MV_ACATIVO",.F.) .And. nModulo == 49 //Gestao Educacional
		If SubStr(GetNewPar("MV_ACVISIB", "222222"),1,1) == "1"
			aAdd(aGpea010Btn, {'WEB', {|| aSegmentos := ACAM060() } , STR0059 , STR0059 } ) //"Segmentos" ## "Segmentos"
		endif
	Endif
    // Inclusao de botoes na toobar  
	If ExistBlock("GPE10BTN")
		aBtn10:=ExecBlock("GPE10BTN",.F.,.F.)
		If Valtype(aBtn10)="A".AND.Len(aBtn10)>=2 //Garante que tenha o icone do botao e a função a ser executada
			aadd(aGpea010Btn,aBtn10)
		EndIf	
	EndIf	
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta Bloco para o Init do Dialog     					   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	bDialogInit := { || EnchoiceBar( oDlg , bSraSet15 , bSraSet24 , NIL , aGpea010Btn )	,;
						SetKey( VK_F4 , bSraRelRd0 ) 								,;
						SetKey( VK_F5 , bSraShwRel )  							 	 ;
					}

	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Admissao do Candidato pelo Ambiente Recrutamento e Selecao   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If cModulo == "RSP"	   
		fRSM001DeP()	//Preenche as variaveis de memoria (SRA) c/ as informacoes do candidato (SQG)
	EndIf

	/*/ 
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Monta o Dialogo Principal                                    ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( lActivate )
		DEFINE MSDIALOG oDlg TITLE OemToAnsi( cCadastro ) From aAdvSize[7],0 TO aAdvSize[6],aAdvSize[5] OF oMainWnd PIXEL 
	EndIF	
	oEnchSra	:= MsmGet():New( "SRA" , nReg , nOpc , NIL , NIL , NIL , aSraFields , aObjSize[1] , aSraAltera , NIL , NIL , NIL , oDlg , NIL , .F. , NIL , .F. )
	IF ( lActivate )
		ACTIVATE MSDIALOG oDlg ON INIT Eval( bDialogInit ) CENTERED
	EndIF	
	
End Sequence

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Coloca o Ponteiro do Mouse em Estado de Espera                           ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()
    
	PcoIniLan("000084")
	
	IF ( lActivate )
		//Se o parametro para o modulo GE estiver ativo, carrega o conteudo de uma variavel privada
		//para uma local, e trabalha com esta a partir deste ponto
		If nOpc == 5  //exclusao
		    If nOpca == 1
				PcoDetLan("000084","01","GPEA010", .T.)
				PcoDetLan("000084","02","GPEA010", .T.)
				PcoDetLan("000084","03","GPEA010", .T.)
			EndIf	
		EndIf	
		Gpea010Put( cAlias , nOpc , nReg , nOpcA , @cSraMat, aSegmentos )
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³UnLock do Registro do SRA 									 ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		SRA->( MsUnLock() )
	   If nOpca == 1
			If nOpc == 3 //inclusao e alteracao
				PcoDetLan("000084","01","GPEA010")
	 		ElseIf nOpc == 4 
				PcoDetLan("000084","03","GPEA010")
			EndIf	
		EndIf	
	EndIF
    
	PcoFinLan("000084")
	PcoFreeBlq("000084")
	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Restaura a Area de Entrada									 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	RestArea( aArea )

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Retornar Set Epoch Padrao									 ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	Set( _SET_EPOCH , nEpoch )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Ponteiro do Mouse 											   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()

Return( nOpcA )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010Put	  ³Autor³ Marinaldo de Jesus  ³ Data ³10/09/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Grava as Informacoes do SRA e Verifica Relacionamento com  o³
³          ³RD0/RDZ														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL    														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010Put( cAlias , nOpc , nReg , nOpcA , cSraMat, aSegmentos )

Local lGrv := .F.

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³Carrega a Matricula que sera retornada por Referencia         ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
cSraMat := GetMemVar( "RA_MAT" )

IF ( nOpcA == 1 )

	Begin Transaction Extended 

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Efetua Gravacao ou Exclusao no SRA                            ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		lGrv	:= Gpea010Grv( cAlias , nOpc , nReg , aSraCols , aSraHeader , aSraVirtual , aSvSraCols , lSraRelRd0 , nRd0Recno )

	End Transaction Extended

	If lGrv 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se o módulo Gestão de Acervos estiver sendo utilizado gerar o funcionário³
		//³como um usuário do Acervo.                                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If GetNewPar("MV_GACATIV",.F.)
			GacxInteg( nOpc, "SRA", SRA->(Recno()) )
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se o módulo Gestão Educacional estiver sendo utilizado gravar os segmen- ³
		//³tos a que pertencem os funcionarios para o controle de visibilidade      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If GetNewPar("MV_ACATIVO",.F.)
			Acm060Gpe( nOpc, aSegmentos, "JHI", "JHI_MATFUN", M->RA_MAT )
		Endif
	EndIf		

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³Monta Array com  os dados para envio de e-mail              ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	/*/
	IF ( lGrv ) .And. nOpc == 3
		fMontaMail( "016" )
	EndIF

ElseIF (;
			( nOpcA == 0 );
			.and.;
			( nOpc == 3 );
		)

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Se nao Gravou funcionario mas fez relacionamento, retira-o   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	IF ( ExistePessoa( "SRA" , xFilial("SRA") + GetMemVar( "RA_MAT" ) , cEmpAnt , cFilAnt , .T. ) )
		IF !( SRA->( MsSeek( xFilial("SRA") + GetMemVar( "RA_MAT" ) , .F. ) ) )
			UndoRelRdz( "SRA" , RD0->RD0_CODIGO , cEmpAnt , cFilAnt )
		EndIF
	EndIF

	/*/
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ RollBack da Numeracao Automatica            				   ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
	While ( GetSX8Len() > nGetSX8Len )
		RollBackSX8()
	End While

EndIF

Return( lGrv )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010Grv	  ³Autor³ Marinaldo de Jesus  ³ Data ³04/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Grava as Informacoes no SRA e suas correlacoes     		    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL    														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010Grv(	cAlias			,;
							nOpc			,;
							nReg			,;
							aSraCols		,;
							aSraHeader		,;
							aSraVirtual		,;
							aSvSraCols		,;
							lSraRelRd0		,;
							nRd0Recno		 ;
						  )
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis de Inicializacao Obrigatoria					  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Local aMestre		:= GdPutIStrMestre( 01 )
Local cOpcao		:= IF( ( nOpc == 5 ) , "DELETE" , IF( ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) , "PUT" , NIL ) )
Local nSraRdzOrd	:= GetRdzIndRel( "SRA" )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis que serao inicializadas no Corpo da Funcao		  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Local cRd0Codigo
Local cLastCodRd0
Local lGrava
Local nLoop
Local nLoops

/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Altera o Estado do Cursor  								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorWait()

	Begin Sequence

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Atualiza aRdmCols para Verificar se Houveram Alteracoes	   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		nLoops := Len( aSraHeader )
		For nLoop := 1 To nLoops
			aSraCols[ 01 , nLoop ] := GetMemVar( aSraHeader[ nLoop , 02 ] )
		Next nLoop

		IF !( lGrava := ( ( nOpc == 5 ) .or. !fCompArray( aSraCols , aSvSraCols ) ) )
			Break
		EndIF

		aMestre[ 01 , 01 ]	:= cAlias
		aMestre[ 01 , 02 ]	:= nReg
		aMestre[ 01 , 03 ]	:= lGrava
		aMestre[ 01 , 04 ]	:= aClone( aSraHeader )
		aMestre[ 01 , 05 ]	:= aClone( aSraVirtual )
		aMestre[ 01 , 06 ]	:= {}
		aMestre[ 01 , 07 ]	:= {}

		IF ( nOpc == 3 ) //Inclusao

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Inclui as Informacoes                        	   			   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdPutInfoData( aMestre , cOpcao , .F. )
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Inicializa o conteudo do campo RA_MSBLQL     	   			   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF SRA->( RecLock( "SRA" , .F. ) )
				SRA->RA_MSBLQL := "2"
				SRA->( MsUnLock() )
			EndIF	

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Efetua Gravacao do SRF                                        ³
			³Em toda inclusao sera gerado automaticamento um registro   no ³
			³SRF, com Filial, Matricula e data de admissao do SRA          ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF Reclock( "SRF" , .T. )
				SRF->RF_FILIAL 	:= SRA->RA_FILIAL
				SRF->RF_MAT		:= SRA->RA_MAT
				SRF->RF_DATABAS	:= SRA->RA_ADMISSA 
				SRF->( MsUnLock() )
			EndIF	
	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Grava Turno e Sequencia Inicial no SPF                        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF (;
					IsMemVar( "RA_ADMISSA" ) .and. ;
					IsMemVar( "RA_TNOTRAB" ) .and. ;
					IsMemVar( "RA_SEQTURN" ) .and. ;
					IsMemVar( "RA_REGRA"   )       ;
				)
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Apenas se forem validos                                       ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF (;
						PosSPA( SRA->RA_REGRA , xFilial("SRA") , NIL , RetOrdem("SPA","PA_FILIAL+PA_CODIGO") , .F. ) .and. ;
						Gpea010SeqVld( .F. , .T. );
					)	
					SRA->( Gpea010SPFGrv( RA_FILIAL , RA_MAT , RA_ADMISSA , RA_TNOTRAB , RA_SEQTURN , RA_REGRA ) )
				EndIF	
			EndIF

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Cria se senha do funcinario para o Brasil quando estiver vazia  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			fSraSenha()

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Obtem o Codigo do RD0                                       ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( lSraRelRd0 )
				RD0->( MsGoto( nRd0Recno ) )
				cRd0Codigo := RD0_CODIGO
			Else
				Rd0GetCodigo( @cRd0Codigo , .F. )
			EndIF
	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Atualiza Cadastro de Pessoas                        		 ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			EntUpdateRd0(	cRd0Codigo							,;	//01 -> Codigo da Pessoa
							"SRA"								,;	//02 -> Entidade Relacionada
							xFilial("SRA")+GetMemVar("RA_MAT")	,;	//03 -> Chave da Entidade
							nSraRdzOrd							,;	//04 -> Ordem
							SRA->( Recno() )					,;	//05 -> Recno da Entidade
							cEmpAnt								,;	//06 -> Codigo da Empresa
							cFilAnt								,;	//07 -> Codigo da Filial
							"1"					 				,;	//06 -> Conteudo para o RD0_TIPO "1"=Interno;"2"=Externo
							.F.				 					,;	//07 -> Se Atualiza as Entidades Relacionadas
							NIL									,;	//10 -> Array com as Entidades para o Before Update
							NIL					 				 ;	//11 -> Se Executa algo depois do Update
						 )
	
	    ElseIF ( nOpc == 4 )	//Alteracao

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Verifica se Houve alteracao Salarial Funcao ou Categoria	 ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF (;
					IsMemVar( "RA_SALARIO" ) .and. ;
					IsMemVar( "RA_CODFUNC" ) .and. ;
					IsMemVar( "RA_CATFUNC" ) .and. ;
					IsMemVar( "RA_CARGO"   ) .and. ;
					IsMemVar( "RA_ANTEAUM" ) 	   	;
				)
				IF (;
						( GdFieldGet( "RA_SALARIO" , 1 , .F. , aSraHeader , aSvSraCols ) <> GetMemVar( "RA_SALARIO" ) ) .or. ;
						( GdFieldGet( "RA_CODFUNC" , 1 , .F. , aSraHeader , aSvSraCols ) <> GetMemVar( "RA_CODFUNC" ) ) .or. ;
						( GdFieldGet( "RA_CATFUNC" , 1 , .F. , aSraHeader , aSvSraCols ) <> GetMemVar( "RA_CATFUNC" ) ) .or. ;
						( GdFieldGet( "RA_CARGO"   , 1 , .F. , aSraHeader , aSvSraCols ) <> GetMemVar( "RA_CARGO"   ) .and. SR7->( Type("R7_CARGO") ) # "U"  ) .or. ;
						( GdFieldPos( "RA_ANTEAUM" , aSraHeader)>0 .AND. GdFieldGet( "RA_ANTEAUM" , 1 , .F. , aSraHeader , aSvSraCols ) <> GetMemVar( "RA_ANTEAUM" ) .and. SR3->( Type("R3_ANTEAUM") ) # "U" )	   ;
					)	
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Garante o Posicionamento no Recno de Entrada            	 ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					SRA->( MsGoto( nReg ) )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Grava as Informacoes no SR3 e SR7                       	 ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					fGravaSr3()
				EndIF
			EndIF				
	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Grava as Alteracoes dos Campos no SR9 (Historico)           ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			nLoops := Len( aSraHeader )
			For nLoop := 1 To nLoops
				IF !( Alltrim( aSraHeader[ nLoop , 02 ] ) $ "RA_SALARIO*RA_CODFUNC*RA_CATFUNC*RA_AFASFGT*RA_SITFOLH" )
					fGravaSr9( aSraHeader[ nLoop , 02 ] , aSraCols[ 01 , nLoop ] , aSvSraCols[ 01 , nLoop ] )
				EndIF	
			Next nLoop
	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Atualiza o Cadastro de Participantes                        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF ( lSraRelRd0 )
				RD0->( MsGoto( nRd0Recno ) )
				cRd0Codigo	:= RD0->RD0_CODIGO
				/*/
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Verifica se Esta alterando Relacionamento Existente         ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				cLastCodRd0 := fGetPessoa( "SRA" , ( xFilial( "SRA" ) + GetMemVar( "RA_MAT" ) ) , cEmpAnt , cFilAnt )
				IF ( cRd0Codigo <> cLastCodRd0 )
					/*/
					ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					³Exclui o Antigo Relacionamento                              ³
					ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
					UndoRelRdz( "SRA" , cLastCodRd0 , cEmpAnt , cFilAnt )
				EndIF
			Else 
				cRd0Codigo := fGetPessoa( "SRA" , ( xFilial( "SRA" ) + GetMemVar( "RA_MAT" ) ) , cEmpAnt , cFilAnt )
			EndIF

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Grava as Informacoes                        	   			   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdPutInfoData( aMestre , cOpcao , .F. )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Atualiza Cadastro Pessoas x Entidades                       ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/ 
			IF !Empty( cRd0Codigo ) 
				EntUpdateRd0(	cRd0Codigo							,;	//01 -> Codigo da Pessoa
								"SRA"								,;	//02 -> Entidade Relacionada
								( xFilial( "SRA" ) + SRA->RA_MAT )	,;	//03 -> Chave da Entidade
								nSraRdzOrd							,;	//04 -> Ordem
								nReg								,;	//05 -> Recno da Entidade
								cEmpAnt								,;	//06 -> Codigo da Empresa
								cFilAnt								,;	//07 -> Codigo da Filial
								"1"									,;	//08 -> Conteudo para o RD0_TIPO "1"=Interno;"2"=Externo
								.F.									,;	//09 -> Se Atualiza as Entidades Relacionadas
								NIL									,;	//10 -> Array com as Entidades para o Before Update
								NIL					 				 ;	//11 -> Se Executa algo depois do Update
					  		)
			EndIF

			/*/ 
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Grava Turno e Sequencia Inicial no SPF                        ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			IF (;
					IsMemVar( "RA_ADMISSA" ) .and. ;
					IsMemVar( "RA_TNOTRAB" ) .and. ;
					IsMemVar( "RA_SEQTURN" ) .and. ;
					IsMemVar( "RA_REGRA"   )       ;
				)
				/*/ 
				ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				³Apenas se forem validos                                       ³
				ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
				IF (;
						PosSPA( SRA->RA_REGRA , xFilial("SRA") , NIL , RetOrdem("SPA","PA_FILIAL+PA_CODIGO") , .F. ) .and. ;
						Gpea010SeqVld( .F. , .T. );
					)	
					SRA->( Gpea010SPFGrv( RA_FILIAL , RA_MAT , dDataBase , RA_TNOTRAB , RA_SEQTURN , RA_REGRA ) )
				EndIF
			EndIF
			// Integracao Medicina e Seguranca do Trabalho
        	If FindFunction("MdtAltFicha")
				MdtAltFicha(xFilial("SRA"),SRA->RA_MAT,M->RA_CODFUNC,M->RA_CC)
			EndIF

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Cria se senha do funcinario para o Brasil quando estiver vazia  ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			fSraSenha()
			
	    ElseIF ( nOpc == 5 )	//Exclusao
		
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Exclui somente Relacionamento (RDZ)                          ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			cLastCodRd0 := fGetPessoa( "SRA" , ( xFilial( "SRA" ) + GetMemVar( "RA_MAT" ) ) , cEmpAnt , cFilAnt )
			UndoRelRdz( "SRA" , cLastCodRd0 , cEmpAnt , cFilAnt )

			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Exclui as Informacoes                        	   			   ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			GdPutInfoData( aMestre , cOpcao , .F. )

	    EndIF

		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³Realiza a gravacao do responsavel no arquivo utilizado  |
		|pelos modulos do Quality Celerina, caso haja integracao.|
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( ( nOpc == 3 ) .or. ( nOpc == 4 ) ) //Incluao ou Alteracao
			Qa_Quality()
		EndIF	
	
		/*/
		ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		³ Confirmando a Numeracao Automatica          				   ³
		ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
		IF ( nOpc == 3 )
			While ( GetSX8Len() > nGetSX8Len )
				ConfirmSX8()
			End While
		EndIF

	End Sequence
		
/*/
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Restaura o Estado do Cursor								   ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
CursorArrow()

Return( lGrava )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Gpea010ChkDel³Autor³Marinaldo de Jesus    ³ Data ³04/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Verifica se os Registros podem ser Deletados                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<Vide Parametros Formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Gpea010()	                                                ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010ChkDel(	cAlias		,;	//Alias do Arquivo Principal
								nReg		,;	//Recno do Arquivo Principal
								nOpc		,;	//Opcao do Arquivo Principal
								cCodigo		 ;	//Chave para Exclusao (Sem a Filial)
							   )

Local aAreas		:= {}
Local cKeyDel		:= ""
Local lChkDelOk 	:= .T.
Local nAreas		:= 0

DEFAULT cAlias		:= Alias()
DEFAULT nReg		:= ( cAlias )->( Recno() )
DEFAULT nOpc		:= 5
DEFAULT cCodigo		:= ""

//SRE
aAdd( aAreas , Array( 04 ) )
nAreas := Len( aAreas )
aAreas[nAreas,01] := SRE->( GetArea() )
aAreas[nAreas,02] := {}
aAreas[nAreas,03] := 0
aAreas[nAreas,04] := { |aLog| DelChkTransf( nReg , @aLog ) }

//SRC
aAdd( aAreas , Array( 03 ) )
nAreas := Len( aAreas )
aAreas[nAreas,01] := SRC->( GetArea() )
aAreas[nAreas,02] := {"RC_FILIAL","RC_MAT"}
aAreas[nAreas,03] := RetOrdem( "SRC" , "RC_FILIAL+RC_MAT" , .T. )

( cAlias )->( MsGoto( nReg ) )
cKeyDel	:= cCodigo

lChkDelOk  := ChkDelRegs(	cAlias				,;	//Alias do Arquivo Principal
							nReg				,;	//Registro do Arquivo Principal
							nOpc				,;	//Opcao para a AxDeleta
							xFilial( cAlias )	,;	//Filial do Arquivo principal para Delecao
							cKeyDel				,;	//Chave do Arquivo Principal para Delecao
							aAreas				,;	//Array contendo informacoes dos arquivos a serem pesquisados
							NIL					,;	//Mensagem para MsgYesNo
							NIL					,;	//Titulo do Log de Delecao
							NIL					,;	//Mensagem para o corpo do Log
							.F.				 	,;	//Se executa AxDeleta
							.T.     			,;	//Se deve Mostrar o Log
							NIL					,;	//Array com o Log de Exclusao
							NIL				 	 ;	//Array com o Titulo do Log
						)
						

Return( lChkDelOk  )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³DelChkTransf  ³Autor³ Marinaldo de Jesus  ³ Data ³05/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Verifica se Existem Transferencias para o Funcionario	    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL    														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function DelChkTransf( nReg , aLog )

Local lDelOk := .T.

SRA->( MsGoto( nReg ) )
IF !( lDelOk := !( fTransf( NIL , NIL , NIL , NIL , NIL , NIL , NIL ,.T. ) ) )
	aAdd( aLog , "SRE" + "     " + STR0051 )	//"Existem Transferencias para o Funcionario"
EndIF

Return( lDelOk )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³SraRelRd0 	  ³Autor³ Marinaldo de Jesus  ³ Data ³05/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Atualiza o SR9 com as Alteracoes efetuadas pelo RD0		    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL    														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function SraRelRd0( nRd0Recno , aHeader , lChkPessoa , cLstCodRd0 )

Local aSvKeys		:= GetKeys()
Local aArea 		:= GetArea()
Local aAreaRD0		:= RD0->( GetArea() )
Local aAreaSRA		:= SRA->( GetArea() )
Local cProcName3	:= Upper( AllTrim( ProcName( 3 ) ) )
Local cProcName5	:= Upper( AllTrim( ProcName( 5 ) ) )
Local cMsgErr		:= ""
Local lSraRelRd0	:= .F.
Local lUndoRelRdz	:= .F.
Local nSraRdzOrd	:= GetRdzIndRel( "SRA" )

Local cCic
Local cSeek
Local nSvRecno

DEFAULT lChkPessoa := .T.

nRd0Recno := 0

Begin Sequence

	IF 	(;
			!( "GPEA010MNT" $ ( cProcName3 + cProcName5 ) );
			 .and.;
			!( "TRM100ROT"  $ ( cProcName3 + cProcName5 ) );
		)	
		Break
	EndIF

	IF Empty( GetMemVar( "RA_MAT" ) )
		MsgInfo( OemToAnsi( STR0052 ) )	//"Preencha o código da Matrícula"
		Break
	EndIF

	IF ( lChkPessoa )
		IF ( ExistePessoa( "SRA" , xFilial("SRA") + GetMemVar( "RA_MAT" ) , cEmpAnt , cFilAnt , .T. ) )
			nLstRecRd0 := RD0->( Recno() )
			cLstCodRd0 := RD0->RD0_CODIGO
			IF !( lSraRelRd0 := MsgNoYes( OemToAnsi( STR0042 ) ) )	//"J  existe relacionamento para este funcion rio. Deseja alter -lo?"
				Break
			EndIF
		EndIF
	EndIF	

	IF ( IsMemVar( "RA_CIC" ) )
		cCic := GetMemVar( "RA_CIC" )
        IF !Empty( cCic )
			RD0->( dbSetOrder( RetOrdem( "RD0" , "RD0_FILIAL+RD0_CIC" ) ) )
			cSeek := ( xFilial( "RD0" , xFilial("SRA") ) + cCic )
			IF RD0->( dbSeek( cSeek , .F. ) )
				nSvRecno := RD0->( Recno() ) 
				IF ( RD0->RD0_MSBLQL <> "2" )
					While RD0->( !Eof() .and. ( cSeek == RD0_FILIAL + RD0_CIC ) )
						IF ( RD0->RD0_MSBLQL == "2" )
							nSvRecno := RD0->( Recno() )
							Exit
						EndIF
						RD0->( dbSkip() )
					End While
				EndIF
				RD0->( MsGoto( nSvRecno ) )
				//"O participante/A Pessoa "###"possui o mesmo numero de "###"criar relacionamento?"
				IF ( lSraRelRd0 := MsgYesNo( OemToAnsi( STR0043  + " " + AllTrim( RD0->RD0_NOME ) + " " + STR0044 + aHeader[GdFieldPos("RA_CIC",aHeader),01] + " " + STR0045 ) ) )
					nRd0Recno := nSvRecno
					RD0->( dbSetOrder( RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" ) ) )
					Break
				EndIF
			EndIF 	
			RD0->( dbSetOrder( RetOrdem( "RD0" , "RD0_FILIAL+RD0_CODIGO" ) ) )
		EndIF
	EndIF

	IF ( lSraRelRd0 := ConPad1( NIL , NIL , NIL , "RD0" , NIL , NIL , .F. ) )

		nRd0Recno := RD0->( Recno() )
		IF ( RdzExisteRel( "SRA" , RD0->RD0_CODIGO , cEmpAnt , cFilAnt , .T. ) )
			IF ( cLstCodRd0 == RD0->RD0_CODIGO )
				Break
			EndIF
			//"O participante/A Pessoa "###"j  est  relacionado(a) a outro funcion rio. Deseja relacionar uma outra pessoa?"
			IF !( lSraRelRd0 := MsgYesNo( OemToAnsi( STR0043 + " " +  STR0046 ) ) )
				nRd0Recno := 0
				Break
			EndIF
			lSraRelRd0 := SraRelRd0( @nRd0Recno , aHeader , .F. , cLstCodRd0 )
			Break
		EndIF

		IF !Empty( cCic ) .and. !Empty( RD0->RD0_CIC )
			IF ( AllTrim( cCic ) <> AllTrim( RD0->RD0_CIC ) )
				//"O n£mero do"###"do participante/pessoa selecionado ‚ diferente do n£mero do"###"funcion rio."###"Deseja continuar?"
				IF !( lSraRelRd0 := MsgNoYes( OemToAnsi( STR0047 + " " + aHeader[GdFieldPos("RA_CIC",aHeader),01] + STR0048 + " " + aHeader[GdFieldPos("RA_CIC",aHeader),01] + STR0049 + " " + STR0050 ) ) )
					Break
				EndIF
			EndIF
		EndIF

	EndIF

End Sequence

CursorWait()

	IF !Empty( nRd0Recno )
		RD0->( MsGoto( nRd0Recno ) )
		IF (;
				!Empty( cLstCodRd0 );
				.and.;
				( cLstCodRd0 <> RD0->RD0_CODIGO );
			)	
			/*/
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³Exclui o Antigo Relacionamento                              ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
			lUndoRelRdz := UndoRelRdz( "SRA" , cLstCodRd0 , cEmpAnt , cFilAnt , .T. , @cMsgErr )
		EndIF
		RD0->( MsGoto( nRd0Recno ) )
		IF Empty( cMsgErr )
			IF ( Empty( cLstCodRd0 ) .or. ( lUndoRelRdz ) )
				fUpdateEnt( RD0->RD0_CODIGO , "SRA" , xFilial( "SRA" ) + GetMemVar( "RA_MAT" ) , nSraRdzOrd , cEmpAnt , cFilAnt )
			EndIF
			fUpdateRel(	RD0->RD0_CODIGO	,;	//RD0_CODIGO
						cEmpAnt			,;	//Codigo da Empresa
						cFilAnt			,;	//Codigo da Filial
						NIL				,;	//Array com as Entidade para o Before Update
						NIL				,;	//Array com as Entidades  para o Later Update
						.T.				,;	//Se ira atualizar variaveis de memoria
						"SRA"			 ;	//Alias das variaveis de memoria
					  )
		EndIF				  
	EndIF
	
	RestArea( aAreaRd0 )
	RestArea( aAreaSRA )
	RestArea( aArea )
	RestKeys( aSvKeys , .T. )

CursorArrow()

Return( lSraRelRd0 )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³SraShwRel 	  ³Autor³ Marinaldo de Jesus  ³ Data ³05/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Atualiza o SR9 com as Alteracoes efetuadas pelo RD0		    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>     								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL    														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function SraShwRel( nRd0Recno )

Local cProcName3	:= Upper( AllTrim( ProcName( 3 ) ) )
Local cProcName5	:= Upper( AllTrim( ProcName( 5 ) ) )

Begin Sequence 

	IF 	(;
			!( "GPEA010MNT" $ ( cProcName3 + cProcName5 ) );
			 .and.;
			!( "TRM100ROT"  $ ( cProcName3 + cProcName5 ) );
		)	
		Break
	EndIF

	IF Empty( nRd0Recno )
		IF ( EntExisteRel( "SRA" , xFilial("SRA")+GetMemVar( "RA_MAT" ) , cEmpAnt , cFilAnt , .T. ) )
			nRd0Recno := RD0->( Recno() )
		Else
			nRd0Recno := 0
		EndIF
	EndIF
	IF !Empty( nRd0Recno )
		RD0->( MsGoto( nRd0Recno ) )
		Apda020Vis( "RD0" , nRd0Recno , 2 )
	Else
		MsgInfo( OemToAnsi( STR0041 ) ) //"N„o existe relacionamento a ser visualizado."
	EndIF

End Sequence
	
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³SraUpdtSr9	  ³Autor³ Marinaldo de Jesus  ³ Data ³03/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Atualiza o SR9 com as Alteracoes efetuadas pelo RD0		    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³SraUpdtSr9( cAlias , aSraFields )								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                 	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³NIL    														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function SraUpdtSr9( cAlias , aSraFields )

Local aArea		:= GetArea()
Local aAreaAls	:= ( cAlias )->( GetArea() )

Local nField
Local nFields

nFields := Len( aSraFields )
For nField := 1 To nFields
	fGravaSr9( aSraFields[ nField , 01 ] , aSraFields[ nField , 04 ] , aSraFields[ nField , 03 ] )
Next nField

RestArea( aAreaAls )
RestArea( aArea )

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³Gp010AltSal³Autor ³ Mauro Sergio          ³ Data ³ 22/04/96 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Consistencia do Campo Tipo Alt. Salarial                    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA010	                                                	³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gp010AltSal()

Local lRet := .T. 
     
If (( IsMemVar( "RA_SALARIO" ) .and. GetMemVar( "RA_SALARIO" ) # SRA->RA_SALARIO) .OR.  ;
    ( IsMemVar( "RA_CODFUNC" ) .and. GetMemVar( "RA_CODFUNC" ) # SRA->RA_CODFUNC) .OR.  ;
 	( IsMemVar( "RA_ANTEAUM" ) .and. GetMemVar( "RA_ANTEAUM" ) # SRA->RA_ANTEAUM .and. SR3->( Type("R3_ANTEAUM") ) # "U" ) .OR.  ;  
	( IsMemVar( "RA_CARGO"   ) .and. GetMemVar( "RA_CARGO"   ) # SRA->RA_CARGO   .and. SR7->( Type("R7_CARGO")   ) # "U" ) )
	
	If ( GetMemVar( "RA_TIPOALT" ) == Space(3) .Or. Empty(GetMemVar( "RA_DATAALT" ) ) )
	    Help("",1,"GPTIPOALT") 
  		 lret := .F.
  	Else
		lRet	:=	PcoVldLan('000084','04','GPEA010')	
  	Endif	 
Endif
Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fGravaSr3 ³ Autor ³ Mauro Sergio          ³ Data ³ 22/04/96 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Gravacao da Alteracao Salarial                              ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fGravaSr3()                                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA010                                                     ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fGravaSr3()
Local cDescCar 		:= ""
Local dRaDataAlt	:= GetMemVar( "RA_DATAALT" )
Local lLock			:= .F.      
Local cFun			:= ""

//--Verifica se ja teve alguma alteracao salarial se nao grava a anterior como Primeira
dbSelectArea("SR7")
IF SR7->( !dbSeek(SRA->RA_FILIAL+SRA->RA_MAT) )

	//-- monta data da alteracao como mes anterior da ultima
    cMes := If (Month(dRaDataAlt) -1 > 0,StrZero(Month(dRaDataAlt)-1,2) , "12")
    cAno := If (cMes = "12", StrZero(Year(dRaDataAlt)-1,4),StrZero(Year(dRaDataAlt),4) )

    cFun := DescFun( SRA->RA_CODFUNC , SRA->RA_FILIAL )

	If SQ3->( dbSeek(xFilial("SQ3")+SRA->RA_CARGO+SRA->RA_CC)) .or. SQ3->( dbSeek(xFilial("SQ3")+SRA->RA_CARGO))
		cDescCar := SQ3->Q3_DESCSUM
   	EndIf
	//--grava o Salario anterior quando nao existir alteracao
	dbSelectArea("SR7")
	IF SR7->( RecLock("SR7",.T.,.T.) )
		SR7->R7_FILIAL   := SRA->RA_FILIAL
		SR7->R7_MAT      := SRA->RA_MAT
		SR7->R7_DATA     := SRA->RA_ADMISSA
		SR7->R7_TIPO     := "001"
		SR7->R7_FUNCAO   := SRA->RA_CODFUNC
		SR7->R7_DESCFUN  := cFun
		SR7->R7_TIPOPGT  := SRA->RA_TIPOPGT
		SR7->R7_CATFUNC  := SRA->RA_CATFUNC
		SR7->R7_USUARIO  := STR0017  //"Sistema"
	   	If SR7->( Type("R7_CARGO") ) # "U"
		   	SR7->R7_CARGO   := SRA->RA_CARGO
	   	EndIf
		If SR7->( Type("R7_DESCCAR") ) # "U"
			SR7->R7_DESCCAR	:= cDescCar
		EndIf
		If SR7->( Type("R7_SEQ") ) # "U"
			SR7->R7_SEQ		:= "1"
		EndIf

		SR7->( MsUnLock() )
		SR7->( FKCOMMIT() )
	EndIF	

	dbSelectArea("SR3")
	IF RecLock("SR3",.T.,.T.)
		SR3->R3_FILIAL   := SRA->RA_FILIAL
		SR3->R3_MAT      := SRA->RA_MAT
		SR3->R3_DATA     := SRA->RA_ADMISSA
		SR3->R3_PD       := "000"
		SR3->R3_DESCPD   := OemToAnsi(STR0018)  //"SALARIO BASE"
		SR3->R3_VALOR    := SRA->RA_SALARIO
		SR3->R3_TIPO     := "001"
		If SR3->( Type("R3_ANTEAUM") ) # "U"
			SR3->R3_ANTEAUM	:= SRA->RA_ANTEAUM
		EndIf
		If SR3->( Type("R3_SEQ") ) # "U"
			SR3->R3_SEQ		:= "1"
		EndIf

		SR3->( MsUnLock() )
	EndIF	

EndIF

//--gravacao da alteracao salarial atual
cFun := DescFun(GetMemVar("RA_CODFUNC"),SRA->RA_FILIAL)
If SQ3->( dbSeek(xFilial("SQ3")+M->RA_CARGO+M->RA_CC)) .or. SQ3->( dbSeek(xFilial("SQ3")+M->RA_CARGO))
	cDescCar := SQ3->Q3_DESCSUM
EndIf
dbSelectArea("SR7")
IF dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+Dtos(dRaDataAlt)+GetMemVar("RA_TIPOALT") )
	lLock := RecLock("SR7",.F.,.T.)
Else
	lLock := RecLock("SR7",.T.,.T.)
Endif

IF ( lLock )
	SR7->R7_FILIAL   := SRA->RA_FILIAL
	SR7->R7_MAT      := SRA->RA_MAT
	SR7->R7_DATA     := dRaDataAlt
	SR7->R7_TIPO     := GetMemVar("RA_TIPOALT")
	SR7->R7_FUNCAO   := GetMemVar("RA_CODFUNC")
	SR7->R7_DESCFUN  := cFun
	SR7->R7_TIPOPGT  := GetMemVar("RA_TIPOPGT")
	SR7->R7_CATFUNC  := GetMemVar("RA_CATFUNC")
	SR7->R7_USUARIO  := SubStr(cUsuario,7,15)
	If SR7->( Type("R7_CARGO") ) # "U"
	   	SR7->R7_CARGO   := M->RA_CARGO
	EndIf
	If SR7->( Type("R7_DESCCAR") ) # "U"
		SR7->R7_DESCCAR	:= cDescCar
	EndIf
	If SR7->( Type("R7_SEQ") ) # "U"
		SR7->R7_SEQ		:= Alltrim(Str(Val(SR3->R3_SEQ)+1))
	EndIf

	SR7->( MsUnLock() )
	SR7->( FKCOMMIT() )
EndIF	

IF ( lLock )

	dbSelectArea("SR3")
	IF dbSeek(SRA->RA_FILIAL+SRA->RA_MAT+Dtos(dRaDataAlt)+GetMemVar("RA_TIPOALT") )
		lLock := RecLock("SR3",.F.,.T.)
	Else
		lLock := RecLock("SR3",.T.,.T.)
	Endif
	
	IF ( lLock )

		SR3->R3_FILIAL   := SRA->RA_FILIAL
		SR3->R3_MAT      := SRA->RA_MAT
		SR3->R3_DATA     := dRaDataAlt
		SR3->R3_PD       := "000"
		SR3->R3_DESCPD   := OemToAnsi(STR0018)  //"SALARIO BASE"
		SR3->R3_VALOR    := GetMemVar("RA_SALARIO")
		SR3->R3_TIPO     := GetMemVar("RA_TIPOALT")
		If SR3->( Type("R3_ANTEAUM") ) # "U"
			SR3->R3_ANTEAUM	:= GetMemVar("RA_ANTEAUM")
		EndIf
		If SR3->( Type("R3_SEQ") ) # "U"
			SR3->R3_SEQ		:= SR7->R7_SEQ
		EndIf

		SR3->( MsUnLock() )
		PcoDetLan('000084','04','GPEA010')	
	EndIF

EndIF		

Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³fGravaSr9 ³Autor³Mauro Sergio        Ver.I ³Data ³22/04/1996³
³          ³          ³     ³Marinaldo de Jesus  Ver.II³Data ³06/02/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³Gravacao da Alteracoes Cadastrais                           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³fGravaSr9(cCampo)                                           ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function fGravaSr9( cCampo , uConteudo , uContAnt )

Local lHist			:= .F.
Local lSraLocked	:= IsLocked( "SRA" , SRA->( Recno() ) )
Local lLock			:= .F.
Local lSetCentury	:= __SetCentury("on")

Local cValid
Local cVldUser
Local cContAnt
Local cConteudo
Local cTypeCnt1
Local cTypeCnt2
Local lAddNew

Begin Sequence

	cTypeCnt1 := ValType( uConteudo )
	cTypeCnt2 := ValType( uContAnt  )
	
	IF !( cTypeCnt1 == cTypeCnt2 )
		Break
	EndIF

	cCampo	:= Upper( AllTrim( cCampo ) )
	cValid	:= GetSx3Cache( cCampo , "X3_VALID" )
	IF !( lHist := ( cValid <> NIL .and. ( "FHIST" $ Upper( cValid ) ) ) )
		cVldUser	:= GetSx3Cache( cCampo , "X3_VLDUSER"	)
		IF !( lHist := ( cVldUser <> NIL .and. ( "FHIST" $ Upper( cVldUser ) ) ) )
			Break
		EndIF
	EndIF

	cPictCpo	:= Upper( AllTrim( GetSx3Cache( cCampo , "X3_PICTURE" ) ) )
	cContAnt	:= AllTrim( AllToChar( uContAnt , cPictCpo ) )
	cConteudo	:= AllTrim( AllToChar( uConteudo , cPictCpo ) )

	IF !( lHist := cContAnt <> cConteudo )
		Break
	EndIF

	//--Verifica se Houve alguma alteracao caso nao haja grava o anterior como primeira
	IF ( cCampo == "RA_OCORREN" ) .or. !Empty( uContAnt )   //-so grava quando nao for vazio

		lAddNew := SR9->( !dbSeek( SRA->( RA_FILIAL + RA_MAT ) + cCampo ) )

		IF ( lAddNew )
			cMes := IF( ( Month(dDataBase) -1 > 0 ) , StrZero( Month( dDataBase ) -1 , 2 ) , "12" )
			cAno := IF( cMes == "12" , StrZero( Year( dDataBase ) - 1 , 4 ) , StrZero( Year( dDataBase ) , 4 ) )
		    IF SR9->( RecLock( "SR9" , .T. , .T. ) )
				SR9->R9_FILIAL   := SRA->RA_FILIAL
				SR9->R9_MAT      := SRA->RA_MAT
				SR9->R9_DATA     := Ctod("01/"+cMes+"/"+cAno,"ddmmyy")
				SR9->R9_CAMPO    := cCampo
				SR9->R9_DESC     := cContAnt
				SR9->( MsUnLock() )
			EndIF	
		EndIF
		
	EndIF

	//--gravacao da alteracao cadastral atual
	lAddNew := !( SR9->( dbSeek( SRA->RA_FILIAL + SRA->RA_MAT + cCampo + Dtos( dDataBase ) ) ) )
	IF SR9->( RecLock( "SR9" , lAddNew , .T. ) )
		SR9->R9_FILIAL   := SRA->RA_FILIAL
		SR9->R9_MAT      := SRA->RA_MAT
		SR9->R9_DATA     := dDataBase
		SR9->R9_CAMPO    := cCampo
		SR9->R9_DESC     := cConteudo
		SR9->( MsUnLock() )
	EndIF	

	IF !( lSraLocked )
		lLock := SRA->( RecLock( "SRA" , .F. ) )
	Else
		lLock := lSraLocked
	EndIF
	
	IF ( lLock )

		//--Flega as Alteracoes correspondentes
		IF ( cCampo $ "RA_NOME" )
			SRA->RA_ALTNOME := "S"
		ElseIF ( cCampo $ "RA_PIS" )
			SRA->RA_ALTPIS := "S"
		ElseIF ( cCampo $ "RA_NUMCP/RA_SERCP/RA_UFCP" )
			SRA->RA_ALTCP := "S"
		ElseIF ( cCampo $ "RA_BAIRRO/RA_MUNICIP/RA_ENDEREC/RA_COMPLEM/RA_ESTADO/RA_CEP" )
			SRA->RA_ALTEND := "S"
		ElseIF ( cCampo $ "RA_ADMISSA" )
			SRA->RA_ALTADM := "S"
		ElseIF ( cCampo $ "RA_OPCAO" )
			SRA->RA_ALTOPC := "S"
		EndIF
		
	EndIF		

	IF !( lSraLocked )
		SRA->( MsUnLock() )
	EndIF

End Sequence

IF !( lSetCentury )
	__SetCentury("off")
EndIF

Return( lHist )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³TestaAtf	  ³Autor³ Marinaldo de Jesus  ³ Data ³21/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Verifica se O Modulo e o ATF          					    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³TestaAtf													³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA010                                                  	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lAtf   														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function TestaAtf()

Local lAtf := ( cModulo == "ATF" ) 

IF ( lAtf ) // Esta verificacao se deve ao fato de o GPEA010 ter saido no menu do modulo Ativo Fixo.
	ApMsgAlert(OemToAnsi(STR0024)) //  "Esta rotina nao pode ser acessada pelo Modulo Ativo Fixo"
EndIF

Return( lAtf )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010SeqVld ³Autor³ Marinaldo de Jesus  ³ Data ³17/10/2001³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validar a Sequencia digitada                                ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Ponto Eletronico                                            ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³lRet 														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010SeqVld( lShowHelp , lVldTrcTurn )

Local lRet	:= .T.

Local cFil
Local cVar
Local cSeq
Local cTno

DEFAULT lShowHelp		:= .T.
DEFAULT lVldTrcTurn		:= .F. 	

IF ( IsMemVar( "RA_SEQTURN" ) .and. IsMemVar( "RA_TNOTRAB" ) )
	cVar	:= ReadVar()
	cSeq	:= IF( cVar == "M->RA_SEQTURN", &( cVar ) , GetMemVar("RA_SEQTURN") )
	cTno	:= GetMemVar("RA_TNOTRAB")
	cFil	:= xFilial( "SPJ" , xFilial("SRA") )
	IF ( ( lVldTrcTurn ) .or. !Empty( cSeq ) )
		lRet := SPJ->( MsSeek( cFil + cTno + cSeq , .F. ) )
	EndIF
	IF !( lRet )
		IF ( lShowHelp )
			Help( ' ' , 1 , 'SEQTURNINV' , , OemToAnsi( STR0025 ) , 1 , 0 ) //Sequencia Nao Cadastrada Para o Turno
		EndIF
	EndIF
EndIF

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010SPFGrv ³Autor³ Marinaldo de Jesus  ³ Data ³26/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Grava Turno Inicial, Sequencia e Regra no Cadastro de Turnos³
³          ³de Trabalho                                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>									³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³GPEA010                                                     ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³<void>														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>									³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010SPFGrv( cFil , cMat , dData , cTnoTrab , cSeqTurn , cRegra )

IF !( SPF->( MsSeek( xFilial("SPF",cFil) + cMat , .F. ) ) )
	IF SPF->( RecLock( "SPF" , .T. ) )
		SPF->PF_FILIAL	:= xFilial( "SPF" , cFil )
		SPF->PF_MAT		:= cMat
		SPF->PF_DATA	:= dData
		SPF->PF_TURNODE	:= cTnoTrab
		SPF->PF_SEQUEDE := cSeqTurn
		SPF->PF_REGRADE := cRegra
		SPF->PF_TURNOPA	:= cTnoTrab
		SPF->PF_SEQUEPA := cSeqTurn
		SPF->PF_REGRAPA := cRegra
		SPF->( MsUnLock() )
	EndIF	
EndIF
	
Return( NIL )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡…o    ³GPEA010Vld³ Autor ³ Bruno Sobieski        ³ Data ³ 17/12/02 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡…o ³ Validacao de campos do SRA a traves do X3_VALID            ³
³          ³                    										³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³ GPEA010                                                    ³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function GPEA010Vld()

Local lRet		:= .T.
Local cVar		:= ReadVar()
Local cConteudo := &( cVar )
Local cValidos	:= ""

IF (;
		( cVar == "M->RA_CATFUNC" );
		.and.;
		( cPaisLoc <> "BRA" );
	)	
	IF ( cPaisLoc == "CHI" )
		cValidos	:=	"AEGMT"
	ElseIF ( cPaisLoc == "URU" )
		cValidos	:=	"AEGHMT"
	ElseIF ( cPaisLoc == "PAR" )
		cValidos	:=	"AEGHMT"
	ElseIF ( cPaisLoc == "DOM" )
		cValidos	:=	"ADEGHMS"
	ElseIf ( cPaisLoc == "ARG" )
		cValidos	:=	"ADEGHMS
	Else
		cValidos	:=	"ACDEGHMST"
	EndIF
	IF !( lRet := ( cConteudo $ cValidos ) )
		Help('',1,'GPEA010001')
   EndIF
EndIF
If cVar == "M->RA_CARGO"                                          
	lRet		:= 	Empty(cVar) .Or. SQ3->(DbSeek(xFilial("SQ3")+M->RA_CARGO+M->RA_CC))
	If !lRet	
		cValidos:=	fDesc("SQ3",M->RA_CARGO,"Q3_CC")
		If !Empty(cValidos)
			Aviso(OemToAnsi(STR0053),OemToAnsi(STR0013)+M->RA_CARGO+OemToAnsi(STR0014)+M->RA_CC+	;
				  OemToAnsi(STR0015),{OemToAnsi(STR0001)},,OemToAnsi(STR0003))	
				//"Atencao!" ### "Nao existe o Cargo " + RA_CARGO + " para o Centro de Custo " + RA_CC + ;
				//". Informe Cargo Valido." ### "OK" ### "Cargo informado invalido."
			lRet	:=	.F.
		Else
			lRet	:=	.T.
		EndIf
	Endif
Endif

Return( lRet )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³RaMsBlQlVld   ³Autor³ Marinaldo de Jesus  ³ Data ³21/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Valid para o campo RA_MSBLQL								³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RaMsBlQlVld()												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_VALID do campo RA_MSBLQL                                 ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRaMsBlQlVld												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RaMsBlQlVld()

Local lRaMsBlQlVld := .T.

Begin Sequence

	IF !( lRaMsBlQlVld := Pertence( RaMsBlQlBox( .T. ) ) )
		Break
	EndIF

End Sequence

Return( lRaMsBlQlVld )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³RaMsBlQlInit  ³Autor³ Marinaldo de Jesus  ³ Data ³21/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Inicializador Padrao para o campo RA_MSBLQL					³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RaMsBlQlInit()												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_RELACAO do campo RA_MSBLQL                               ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³"2"															³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RaMsBlQlInit()
Return( SubStr( RaMsBlQlBox( .T. ) , 2 , 1 ) )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³RaMsBlQlBox   ³Autor³ Marinaldo de Jesus  ³ Data ³21/01/2004³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Opcoes do cBox para o campo RA_MSBLQL					    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RaMsBlQlInit()												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³X3_CBOX do campo RA_MSBLQL                               	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³cOpcBox														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RaMsBlQlBox( lValid , lRetDesc , cOpcDesc )

Local cOpcBox

DEFAULT lValid		:= .F.
DEFAULT lRetDesc	:= .F.

IF !( lValid )

	IF !( lRetDesc )

		cOpcBox := ( "1=" + STR0026 + ";" )	//"Nao"
		cOpcBox += ( "2=" + STR0027		  )	//"Sim" 

	Else

		Do Case
			Case ( cOpcDesc == "1" ) ; ( cOpcBox := STR0026 )	//"Nao"
			Case ( cOpcDesc == "2" ) ; ( cOpcBox := STR0027 )	//"Sim" 
		End Case

	EndIF

Else

	cOpcBox := "12"

EndIF

Return( cOpcBox )

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010ValPE  ³Autor³ Ricardo Duarte Costa³ Data ³20/04/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao ponto entrada de Inclusao/Alteracao de Funcionario³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Gpea010ValPE()												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³                                                         	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010ValPE()

Local lRet	:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para checar os dados de inclusao/alteracao  |
//³ de funcionarios. O retorno deve ser logico (.T. ou .F.)      |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("Gp010ValPE")
	lRet := ExecBlock("Gp010ValPE",.F.,.F.)
Endif

Return(lRet)



/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010Excl   ³Autor³ Natie               ³ Data ³03/06/2006³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao-Ponto entrada para validar exclusao de funcionar. ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³Gpea010Excl     											³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³                                                         	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010Excl()

Local lRet	:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para validacao de Exclusao de Funcionarios  |
//³ O retorno deve ser logico (.T. ou .F.)                       |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("Gp010Exclu")
	lRet := ExecBlock("Gp010Exclu",.F.,.F.)
Endif

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA010   ºAutor  ³Microsiga           º Data ³  07/07/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function GP010Categ( cCateg )
lRet := .T.

If ALTERA
	If cCateg == "A" .and. SRA->RA_CATFUNC # "A"
		lRet := .F.
		Aviso( OemToAnsi(STR0053), OemToAnsi(STR0027),{OemToAnsi(STR0001)},,OemToAnsi(STR0028))	
		//"Atencao" ### "Nao e possivel alterar a Categoria deste funcionario para Autonomo." ### "OK" ### "Categoria incorreta"
	EndIf	
EndIf

Return( lRet )


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³GPEA010   ºAutor  ³Microsiga           º Data ³  07/07/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static function AltSX3()
Local aArea 	:= GetArea()
Local aAreaSxb	:= SXB->(GetArea()) 

dbSelectArea("SX3")
dbSetOrder(2)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Alterar a validacao do RA_CATFUNC para nao permitir       ³
//³que a categoria seja alterada para "A"( autonomo) quando o ³
//³funcionario ja tiver sido cadastrado.                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SX3->( dbSeek("RA_CATFUNC"))
	If SX3->X3_VALID # 'EXISTCPO("SX5","28"+M->RA_CATFUNC).And.GPEA010Vld() .AND. GP010CATEG( M->RA_CATFUNC )'
		RECLOCK( "SX3", .F.)
		SX3->X3_VALID := 'EXISTCPO("SX5","28"+M->RA_CATFUNC).And.GPEA010Vld() .AND. GP010CATEG( M->RA_CATFUNC )'
		SX3->( MsUnlock() )
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Alterar a validacao do RA_MAT para passar a M->RA_MAT na  ³
//³ chamada da funcao ExistChav()                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SX3->( dbSeek("RA_MAT"))
	If At("Val(M->RA_MAT) > 0",SX3->X3_VALID) > 0
		If SX3->X3_VALID # 'NaoVazio() .And. EXISTCHAV("SRA",M->RA_MAT) .And. Val(M->RA_MAT) > 0 .And. FreeForUse("SRA",M->RA_MAT)'
			RECLOCK( "SX3", .F.)
			SX3->X3_VALID := 'NaoVazio() .And. EXISTCHAV("SRA",M->RA_MAT) .And. Val(M->RA_MAT) > 0 .And. FreeForUse("SRA",M->RA_MAT)'
			SX3->( MsUnlock() )
		EndIf
	Else
		If SX3->X3_VALID # 'NaoVazio() .And. EXISTCHAV("SRA",M->RA_MAT) .And. FreeForUse("SRA",M->RA_MAT)'
			RECLOCK( "SX3", .F.)
			SX3->X3_VALID := 'NaoVazio() .And. EXISTCHAV("SRA",M->RA_MAT) .And. FreeForUse("SRA",M->RA_MAT)'
			SX3->( MsUnlock() )
		EndIf
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Incluir a validacao do RA_DATAALT para nao permitir       ³
//³que a data de alteracao seja menor que a data da admissao. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SX3->( dbSeek("RA_DATAALT")) .And. Empty(SX3->X3_VALID)
	RECLOCK( "SX3", .F.)
		SX3->X3_VALID := 'RaDtAltVld()'
	SX3->( MsUnlock() )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Implementacao da Consulta Padrao: RB601 - Tabela+Nivel+Faixa ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SX3->( dbSeek("RA_TABELA")) .And. AllTrim(SX3->X3_F3) !='RB601'
	RecLock( "SX3", .F.)
		SX3->X3_F3 := 'RB601'
	SX3->( MsUnlock() )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Alterada Consulta Padrao para filtrar Centro de Custo do   ³
//³Funcionario. Ajuste no Valid tambem.                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SX3->( dbSeek("RA_CARGO"))
	If SX3->X3_F3 # "Q3S"
		RECLOCK( "SX3", .F.)
		SX3->X3_F3 := "Q3S"
		SX3->( MsUnlock() )
	EndIf
	If SX3->X3_VALID # "GPEA010Vld()"
		RECLOCK( "SX3", .F.)
		SX3->X3_VALID := "GPEA010Vld()"
		SX3->( MsUnlock() )
	EndIf
EndIf
              
If SX3->( dbSeek("RA_CBO")) 
	If SX3->X3_VALID # "NaoVazio() .and. FHIST()"
		RECLOCK( "SX3", .F.)
		SX3->X3_VALID := "NaoVazio() .and. FHIST()"
		SX3->( MsUnlock() )
    EndIf
EndIf                  

If SX3->( dbSeek("RA_NASC")) 
	If SX3->X3_VALID # "NaoVazio() .And. ChkDtNa(dDataBase,M->RA_NASC) .and. FHIST()"
		RECLOCK( "SX3", .F.)
		SX3->X3_VALID := "NaoVazio() .And. ChkDtNa(dDataBase,M->RA_NASC) .and. FHIST()"
		SX3->( MsUnlock() )
	EndIf	
EndIf

If cPaisLoc == "CHI" 
	IF SX3->( dbSeek( "RA_CIC" ) )
		IF !( Upper( AllTrim( SX3->X3_VALID ) ) == 'If(Empty(M->RA_CIC),.T.,LocBlock("VDRUT",.F.,.F.,{"M->RA_CIC",'+"'"+'XFILIAL("SRA")'+"'"+',ALIAS(),5})) .AND. FHIST()' )
			SX3->( RecLock("SX3",.F.) )
			SX3->X3_VALID := 'If(Empty(M->RA_CIC),.T.,LocBlock("VDRUT",.F.,.F.,{"M->RA_CIC",'+"'"+'XFILIAL("SRA")'+"'"+',ALIAS(),5})) .AND. FHIST()' 
			SX3->( MsUnLock() )
		EndIF
	Endif
Endif	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Alterar a picture do campo RA_TELEFON                     ³
//³(nao era possivel visualizar todos os numeros inseridos no ³
//³campo                                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SX3->( dbSeek("RA_TELEFON"))
	If ALLTRIM(SX3->X3_PICTURE)  == '@S15'
		RECLOCK( "SX3", .F.)
		SX3->X3_PICTURE := '@!'
		SX3->( MsUnlock() )
	EndIf
EndIf

If cPaisLoc == "ARG"
	IF SX3->( dbSeek( "RA_CIC" ) )
		IF !( Upper( AllTrim( SX3->X3_VALID ) ) == 'If(Empty(M->RA_CIC),.T.,CUIT() .AND. CHKCUIL(M->RA_CIC)) .AND. FHIST()' )
			SX3->( RecLock("SX3",.F.) )
			SX3->X3_VALID := 'If(Empty(M->RA_CIC),.T.,CUIT() .AND. CHKCUIL(M->RA_CIC)) .AND. FHIST()'  
			SX3->( MsUnLock() )
		EndIF
	Endif
	If SX3->( dbSeek("RA_ADTPOSE") )
		If SX3->X3_RESERV <> "‚À"
			Reclock( "SX3", .F.)
			X3_RESERV	:= "‚À"
			MsUnlock()
		Endif	
		If SX3->X3_VALID <> " "
			Reclock( "SX3", .F.)
			X3_VALID	:= " "
			MsUnlock()
		Endif	
		If SX3->X3_WHEN <> "FATSERVICO()"
			Reclock( "SX3", .F.)
			X3_WHEN	:= "FATSERVICO()"
			MsUnlock()
		Endif	
	EndIf
Endif	

dbSetOrder(1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ajusta o SXB da consulta SRJ - Funcoes.                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SXB")
dbSetOrder(1)
If dbseek("SRJ   30101")
	If substr(SXB->XB_CONTEM,3,2) == "##"
		RecLock( "SXB" , .F. )
		SXB->XB_CONTEM	:= "01#GP030INC"
		SXB->( MsUnlock() )
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Implementacao do Filtro da Consulta Padrao: RB601 - Tabela+Nivel ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !SXB->( dbSeek("RB601 601  ") )	
	RecLock("SXB",.T.)   
		SXB->XB_ALIAS  	:= 'RB601'
		SXB->XB_TIPO	:= '6'
		SXB->XB_SEQ		:= '01'
		SXB->XB_CONTEM 	:= '@#GP010F3RB6()'
	MsUnlock()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajuste no filtro da consulta padrao Q3S                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SXB->( dbSeek("Q3S   601  ") )	.And. XB_CONTEM != 'SQ3->Q3_CC==If(type("M->RA_CC")<> "U",M->RA_CC,SRA->RA_CC) .Or. Empty(SQ3->Q3_CC)'
	RecLock("SXB",.F.)   
		SXB->XB_CONTEM	:= 'SQ3->Q3_CC==If(type("M->RA_CC")<> "U",M->RA_CC,SRA->RA_CC) .Or. Empty(SQ3->Q3_CC)'
	MsUnlock()
Endif

RestArea(aAreaSXB)


RestArea(aArea) 

Return


/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³ RaDtAltVld   ³Autor³ Emerson Grassi Rocha³ Data ³05/08/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Validacao do campo RA_DATAALT (Data de alteracao salarial)  ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³RaDtAltVld()												³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³Generico                                                   	³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Retorno   ³lRet														³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<void>														³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function RaDtAltVld()

Local lRet := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Nao permitir Dt. Alteracao Salarial menor que Dt.Admissao	 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(M->RA_DATAALT) .And. M->RA_DATAALT < M->RA_ADMISSA
	Aviso(OemToAnsi(STR0053), OemToAnsi(STR0056), {OemToAnsi(STR0001)})	//"Atencao!"###"A data da alteração salarial não pode ser menor que a data de admissão." ### "OK"
	lRet := .F.
EndIf

Return lRet

/*/
ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿
³Fun‡„o    ³Gpea010FunVld ³Autor³ Eduardo Ju                  ³ Data ³23/09/2005³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´
³Descri‡„o ³Atualizacao do Salario baseado na Faixa Salarial a partir da Funcao ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Sintaxe   ³<vide parametros formais>							        		³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Uso       ³                                                                    ³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³ Retorno  ³lRet 																³
ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
³Parametros³<vide parametros formais>											³
ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ/*/
Static Function Gpea010FunVld(cCampo)

Local cCargo 	:= SuperGetMv("MV_FUNCARG",NIL,"F") //   C - Atualiza o campo salario baseado na Faixa Salarial do cargo 
                                                     //   F - Atualiza o campo salario baseado no salario - SRJ 
Local nSalario	:= SRA->RA_SALARIO 


//Parametro MV_FUNCARG
//C  - Considera a Faixa Salarial e atualiza o campo Salario no Cadastro de Funcionarios com o Valor da Faixa Salarial
//F  - Considera o Salario da Funcao e atualiza o campo Salario no Cadastro de Funcionarios 
//"" - Nao considera nenhuma as situacoes anteriores
//Lembrando que cAltSal == "S" atualiza as Informacoes da Funcao no Cadastro de Funcionarios

If cAltSal = "S"   						//-- Somente deverá considerar o parametro MV_FUNCARG se o MV_ALTSAL estiver com  "S"
	If cCargo == "C"  
		If (cCampo == "F" .And. !Empty(SRJ->RJ_CARGO)) .Or. cCampo == "C"	//Cargo considerando Campo Funcao ou Cargo 
			ConPad1( NIL , NIL , NIL , "RB601" , NIL , NIL , .F. )		
			nSalario 		:= RB6->RB6_VALOR
			M->RA_TABELA 	:= RB6->RB6_TABELA
			M->RA_TABNIVE	:= RB6->RB6_NIVEL
			M->RA_TABFAIX	:= RB6->RB6_FAIXA		
		EndIf
	ElseIf cCargo == "F" .or.  Empty(cCargo)  							//	Funcao
		nSalario :=    SRJ->RJ_SALARIO
		//nSalario := Iif( Inclui .Or. cAltSal = "S" , SRJ->RJ_SALARIO , SRA->RA_SALARIO ) 
	Endif
EndiF
Return( nSalario ) 

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³AcertSX7	 ³ Autor ³ Eduardo Ju           ³ Data ³ 23.09.05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Criacao do Gatilho RA_CODFUNC007 e RA_CARGO002 no SX7.      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA010                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AcertSX7()

Local aArea := GetArea()
Local cX7Regra := ""

SX7->( dbSetOrder(1))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Acerta gatilho para a descricao do cargo, somente quando RA_CARGO estiver preenchido.                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF SX7->( dbSeek("RA_CARGO  001") )
	IF Upper( SX7->X7_REGRA ) # "RaCargoX7Regra()" .or. ; 
   	   Upper( SX7->X7_CONDIC) # '!Empty(M->RA_CARGO)'
		Reclock("SX7", .F.)                    
		SX7->X7_CDOMIN	:= 'RA_DCARGO'
		SX7->X7_REGRA	:=	"RaCargoX7Regra()"  
		SX7->X7_TIPO	:= 'P'
		SX7->X7_SEEK	:= 'S'
		SX7->X7_ALIAS 	:= 'SQ3'
		SX7->X7_ORDEM	:= 1
		SX7->X7_CHAVE	:= 'xFilial("SQ3")+M->RA_CARGO'
		SX7->X7_CONDIC	:= '!Empty(M->RA_CARGO)'
		SX7->X7_PROPRI	:= 'S'
		MsUnlock()
	EndIf
EndIf    

IF SX7->( dbSeek('RA_CARGO  002') )
	IF SX7->X7_PROPRI # "S"
		Aviso( OemToAnsi(STR0053), OemToAnsi(STR0057) + "RA_CARGO/002" + OemToAnsi(STR0058), { "OK" } )		
		// "Atencao!"###"Foi encontrado gatilho RA_CARGO/002 criado pelo usuario. Favor acertar a sequencia e executar a rotina novamente."
	EndIF
Else
	Reclock( "SX7", .T.) 
	SX7->X7_CAMPO	:= 'RA_CARGO'
	SX7->X7_SEQUENC	:= '002'
	SX7->X7_REGRA	:= 'GPEA010FUNVLD("C")'
	SX7->X7_CDOMIN	:= 'RA_SALARIO'
	SX7->X7_TIPO	:= 'P'
	SX7->X7_SEEK	:= 'N'
	SX7->X7_ORDEM	:= 0
	SX7->X7_PROPRI	:= 'S'
	MsUnlock()
EndIf		 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Condicao Valida somente na Inclusao. Caso a Funcao esteja vinculada a um cargo. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cX7Regra := "Iif( Inclui,M->RA_CARGO := SRJ->RJ_CARGO,M->RA_CARGO)"
IF SX7->( dbSeek("RA_CODFUNC004") )
	If Upper(SX7->X7_REGRA) <> cX7Regra
		Reclock( "SX7", .F.)
		SX7->X7_REGRA	:= cX7Regra	
		SX7->X7_CDOMIN	:= 'RA_CARGO'
		MsUnlock()
	Endif
Else 
	Reclock( "SX7", .T.) 
	SX7->X7_CAMPO	:= 'RA_CODFUNC'
	SX7->X7_SEQUENC	:= '004'
	SX7->X7_REGRA	:= cX7Regra
	SX7->X7_CDOMIN	:= 'RA_CARGO'
	SX7->X7_TIPO	:= 'P'
	SX7->X7_SEEK	:= 'S'
	SX7->X7_ALIAS 	:= 'SRJ' 
	SX7->X7_ORDEM	:= 1
	SX7->X7_CHAVE	:= 'xFilial("SRJ")+M->RA_CODFUNC'
	SX7->X7_PROPRI	:= 'S'
	MsUnlock()
EndIf		 

cX7Regra := "Iif( Inclui,M->RA_DCARGO := SQ3->Q3_DESCSUM,M->RA_DCARGO)"	
IF SX7->( dbSeek("RA_CODFUNC005") )
	If Upper(SX7->X7_REGRA) <> cX7Regra
		Reclock( "SX7", .F.)
		SX7->X7_REGRA	:= cX7Regra	
		SX7->X7_CDOMIN	:= 'RA_DCARGO'
		SX7->X7_TIPO	:= 'P'
		SX7->X7_SEEK	:= 'S'
		SX7->X7_ALIAS 	:= 'SQ3' 
		SX7->X7_ORDEM	:= 1
		SX7->X7_CHAVE	:= 'xFilial("SQ3")+M->RA_CARGO'
		SX7->X7_PROPRI	:= 'S'	
		MsUnlock()
	Endif
Else 
	Reclock( "SX7", .T.) 
	SX7->X7_CAMPO	:= 'RA_CODFUNC'
	SX7->X7_SEQUENC	:= '005'
	SX7->X7_REGRA	:= cX7Regra	
	SX7->X7_CDOMIN	:= 'RA_DCARGO'
	SX7->X7_TIPO	:= 'P'
	SX7->X7_SEEK	:= 'S'
	SX7->X7_ALIAS 	:= 'SQ3' 
	SX7->X7_ORDEM	:= 1
	SX7->X7_CHAVE	:= 'xFilial("SQ3")+M->RA_CARGO'
	SX7->X7_PROPRI	:= 'S'	
	MsUnlock()
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quando o parametro Mv_AltSal = "N" esta sendo disparado o conteudo do campo RA_CODCBO porem ele é virtual, ³
//³ tratar o campo RJ_CODCBO, pois o campo virtual busca este resgistro.                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SX7->(dbSeek("RA_CODFUNC"+"006")) 
	If Upper(SX7->X7_REGRA) <> "SRJ->RJ_CODCBO"
		RECLOCK( "SX7", .F.)
		SX7->X7_REGRA := "SRJ->RJ_CODCBO"
		SX7->( MsUnlock() )
	Endif 	
Else 
	Reclock( "SX7", .T.) 
	SX7->X7_CAMPO	:= 'RA_CODFUNC'
	SX7->X7_SEQUENC	:= '006'
	SX7->X7_REGRA	:= 'SRJ->RJ_CODCBO'
	SX7->X7_CDOMIN	:= 'RA_CODCBO'
	SX7->X7_TIPO	:= 'P'
	SX7->X7_SEEK	:= 'S'
	SX7->X7_ALIAS 	:= 'SRJ' 
	SX7->X7_ORDEM	:= 1
	SX7->X7_CHAVE	:= 'xFilial("SRJ")+M->RA_CODFUNC'
	SX7->X7_CONDIC	:= 'Left(cModulo,1)<>"Q"'
	SX7->X7_PROPRI	:= 'S'
EndIf

IF SX7->( dbSeek('RA_CODFUNC007') )
	IF SX7->X7_PROPRI # "S"
		Aviso( OemToAnsi(STR0053), OemToAnsi(STR0057) + "RA_CODFUNC/007" + OemToAnsi(STR0058), { "OK" } )		
		// "Atencao!"###"Foi encontrado gatilho RA_CODFUNC/007 criado pelo usuario. Favor acertar a sequencia e executar a rotina novamente."
	EndIF	
Else
	Reclock( "SX7", .T.) 
	SX7->X7_CAMPO	:= 'RA_CODFUNC'
	SX7->X7_SEQUENC	:= '007'
	SX7->X7_REGRA	:= 'GPEA010FUNVLD("F")'
	SX7->X7_CDOMIN	:= 'RA_SALARIO'
	SX7->X7_TIPO	:= 'P'
	SX7->X7_SEEK	:= 'N'
	SX7->X7_ORDEM	:= 0
	SX7->X7_PROPRI	:= 'S'
	MsUnlock()
EndIf

RestArea( aArea )

Return Nil

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³GP010F3RB6 ³ Autor ³ Eduardo Ju           ³ Data ³ 05.05.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Criacao do Filtro Tabela e Nivel para o Cargo.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA010                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function GP010F3RB6()     

Local uRet 		:= "@#"	
Local cFunname 	:= ""

cFunname := Upper(Alltrim(Funname()))

If HTTPISAPW()
   uRet := .T.	 // O retorno devera ser sempre .T. quando executado pela Web (TCF)
EndIf   
If ( cFunname == "TRMA100" .Or. cFunname == "GPEA010" .Or. cFunname == "GPEA011")
	If !Empty(SQ3->Q3_TABELA+SQ3->Q3_TABNIVE)
		uRet:= "@#RB6->RB6_TABELA+RB6->RB6_NIVEL == SQ3->Q3_TABELA+SQ3->Q3_TABNIVE@#"
	Else
		uRet:= "@#"
	EndIf
EndIf

Return uRet 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ fAltSxb  ºAutor  ³Tania Bronzeri      º Data ³ 18/05/2006  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Ajusta Consulta Padrao SXB                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function fAltSxb()
Local aArea := GetArea()

dbSelectArea("SXB")
SXB->( dbSetOrder(1))
IF !(SXB->( dbSeek("SQ3   101DB") ))
	Begin Transaction
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "1"
		SXB->XB_SEQ		:= "01" 
		SXB->XB_COLUNA	:= "DB"
		SXB->XB_DESCRI	:= "Espec. de Cargos"
		SXB->XB_CONTEM	:= "SQ3"
		MsUnlock()
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "2"
		SXB->XB_SEQ		:= "01" 
		SXB->XB_COLUNA	:= "01"
		SXB->XB_DESCRI	:= "Codigo"
		MsUnlock()
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "3"
		SXB->XB_SEQ		:= "01" 
		SXB->XB_COLUNA	:= "01"
		SXB->XB_DESCRI	:= "Cadastra Novo"
		SXB->XB_CONTEM	:= "01"
		MsUnlock()
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "4"
		SXB->XB_SEQ		:= "01" 
		SXB->XB_COLUNA	:= "01"
		SXB->XB_DESCRI	:= "Cargo"
		SXB->XB_CONTEM	:= "SQ3->Q3_CARGO"
		MsUnlock()
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "4"
		SXB->XB_SEQ		:= "01" 
		SXB->XB_COLUNA	:= "02"
		SXB->XB_DESCRI	:= "Descricao"
		SXB->XB_CONTEM	:= "SQ3->Q3_DESCSUM"
		MsUnlock()
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "4"
		SXB->XB_SEQ		:= "01" 
		SXB->XB_COLUNA	:= "03"
		SXB->XB_DESCRI	:= "Centro de Custo"
		SXB->XB_CONTEM	:= "SQ3->Q3_CC"
		MsUnlock()
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "5"
		SXB->XB_SEQ		:= "01" 
		SXB->XB_CONTEM	:= "SQ3->Q3_CARGO"
		MsUnlock()
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "5"
		SXB->XB_SEQ		:= "02" 
		SXB->XB_CONTEM	:= "SQ3->Q3_DESCSUM"
		MsUnlock()
		Reclock( "SXB", .T.)
		SXB->XB_ALIAS	:= "SQ3"
		SXB->XB_TIPO	:= "6"
		SXB->XB_SEQ		:= "01" 
		SXB->XB_CONTEM	:= 'SQ3->Q3_CC==If(type("M->RA_CC")<> "U",M->RA_CC,SRA->RA_CC) .Or. Empty(SQ3->Q3_CC)'
		MsUnlock()
	End Transaction
EndIf		

RestArea( aArea )

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³RaCargoX7Regra³ Autor ³ Tania Bronzeri           ³ Data ³ 19/05/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para carregar descricao do Cargo do Funcionario               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³GPEA010                                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function RaCargoX7Regra()     

Local cFuncao 	:= M->RA_CODFUNC
Local cCc		:= M->RA_CC                                               
Local cCargo	:= M->RA_CARGO
Local cCodCargo	:= Iif(Empty(cCargo),fDesc("SRJ",cFuncao,"RJ_CARGO"),cCargo)
Local cDesCargo	:= fDesc("SQ3",cCodCargo+cCc,"Q3_DESCSUM")

cDesCargo		:= If(Empty(cDesCargo),fDesc("SQ3",cCodCargo+space(05),"Q3_DESCSUM"),cDesCargo)

Return (cDesCargo) 


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Implementação para tratar a execução do valid do campo RA_MAT³
//³no confirmar do botão da tela da enchoice.                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static Function Gpea010RunValid()
Local aSalvaArea	:= GetArea()
Local lRetorno		:= .F.
Local nEncho		:= 1
Local nPos			:= ASCAN(oenchsra:agets,{ |X| "RA_MAT"$X})	// Pesquisa a posicao do campo RA_MAT na enchoice

nEncho	:= oEnchSra:Nctrl
oEnchSra:aEntryCTRLS[nPos]:setFocus()

dbSelectArea("SX3")
dbSetOrder(2)
If dbSeek("RA_MAT")
	cExecMat	:= SX3->X3_VALID
	lRetorno	:= &cExecMat
Endif
RestArea(aSalvaArea)
oEnchSra:GOTOCTRL(nEncho)

Return(lRetorno)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³fSraSenha ºAutor  ³Microsiga           º Data ³  08/16/06   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Gravar a senha para o funcionario posicionado quando a mesmaº±±
±±º          ³estiver vazia                                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ GPEA010                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function FSraSenha()
              
	If cPaisLoc = 'BRA' .And. !(SRA->(Eof())) .And. Empty(SRA->RA_SENHA) .And. !Empty(SRA->RA_CIC)
		RecLock("SRA",.F.)
		SRA->RA_SENHA := RD0SX7PASS(SRA->RA_NASC,SRA->RA_ADMISSA,SRA->RA_CIC,SRA->RA_SENHA)  
		MsUnlock()
	Endif	
	                         
Return
